{
  "contractName": "NFT",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721EnumerableForbiddenBatchMint",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721IncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721NonexistentToken",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "ERC721OutOfBoundsIndex",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "safeMint",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAvailableNFTs",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableNFTs\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NFT.sol\":\"NFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x856ca1885aec23d54da3f2760b5d216d1b28ad20f798000336375a30dbbc1558\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc725c462ccbf284432d3123ab8c9bab24903730cae227ae4945878039d2fe54\",\"dweb:/ipfs/QmdiEVMvm8njp96dm2s4mThYBD74tY59mNP6s7CzKkGHAh\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xca34c490d41c332106d30b657f00dc028532cb6b9fef2b1729670ce476b36bce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef5e7685d50ed8aae2104a7eb2c31ae5a3b508f24fadfa7611f92f819201aee9\",\"dweb:/ipfs/QmYbTD32FPrEfP1hkniQmRxVUWp8GTSqFV1Bhwx1HVirse\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xe85bdcbce4b8474872045aafb5ed8e3e0a5bd794ded35f76ee9deef25bdc7446\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60872f2d516e70f06d9684386c6b9c0b9d7ff7f4af257be6087efa2c3bb81937\",\"dweb:/ipfs/QmdWgPbs2e8SFNNXPFwTt2xD5N8hniehgGCMHUnY1JDcCw\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xb9dc602a845c73d11f1fe38039c0c2cf70fedd2d4afd877c0ed2d0383ffaa232\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59eb46224e996c2f9ecb9a821e65b920c2ecfe9df734613c3df9831de373491c\",\"dweb:/ipfs/QmTsZzJTqRavv64zyaWovcWkUNwfU3uo8uiUjrMFEm8MMj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xaa3852717be1903bf8b8a66c7ce323f70ac93227769c450f2b332fdd16bd9198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09ce2e4a5b1064a392594c0d5efeb3ccd8eacf431e55a85574cafb6bfb72ba69\",\"dweb:/ipfs/QmUbT5UomYpwwMrNMzzuNcGb4sxuMZ4jz8mMPZewX8mEPn\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"project:/contracts/NFT.sol\":{\"keccak256\":\"0x5cec3050ac54fd42b4990e93143acf89dbeff09795fc6fdfd9dfebabe7d95dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a35c34b54b23df4330eab2264aa0c44f5a9fdd1520fbf479ab90118d986bc1\",\"dweb:/ipfs/QmQ7fKnFFMcwfu6d4C6vcUCntPSmMtMLKt6o8qSJg1AUh3\"]}},\"version\":1}",
  "bytecode": "0x60806040523462000037576200001e6200001862000110565b62000ea4565b620000286200003d565b6132a3620012b982396132a390f35b62000043565b60405190565b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b90620000719062000047565b810190811060018060401b038211176200008a57604052565b62000051565b90620000a76200009f6200003d565b928362000065565b565b5f80fd5b60018060a01b031690565b620000c390620000ad565b90565b620000d181620000b8565b03620000d957565b5f80fd5b90505190620000ec82620000c6565b565b906020828203126200010a5762000107915f01620000dd565b90565b620000a9565b620001336200455c80380380620001278162000090565b928339810190620000ee565b90565b60018060401b03811162000155576200015160209162000047565b0190565b62000051565b90620001716200016b8362000136565b62000090565b918252565b5f7f4469616d6f6e6400000000000000000000000000000000000000000000000000910152565b620001a960076200015b565b90620001b86020830162000176565b565b620001c46200019d565b90565b5f7f4469616d6f6e644e465400000000000000000000000000000000000000000000910152565b620001fa600a6200015b565b906200020960208301620001c7565b565b62000215620001ee565b90565b634e487b7160e01b5f525f60045260245ffd5b634e487b7160e01b5f52602260045260245ffd5b906001600283049216801562000262575b60208310146200025c57565b6200022b565b91607f169162000250565b5f5260205f2090565b601f602091010490565b1b90565b91906008620002a39102916200029c5f198462000280565b9262000280565b9181191691161790565b90565b90565b620002cc620002c6620002d292620002ad565b620002b0565b620002ad565b90565b90565b9190620002f3620002ed620002fc93620002b3565b620002d5565b90835462000284565b9055565b5f90565b6200031a916200031362000300565b91620002d8565b565b5b81811062000329575050565b80620003385f60019362000304565b016200031d565b9190601f811162000350575b505050565b6200035f6200038a936200026d565b9060206200036d8462000276565b8301931062000393575b620003829062000276565b01906200031c565b5f80806200034b565b9150620003828192905062000377565b6001620003ee7f626a376b686d6733696367667877347473713676736f72706b7361000000000092620003e4603b620003dd83546200023f565b836200033f565b607781556200026d565b7f6261667962656967776a366f66743465673578676261356a66613736327166665f8201550155565b6200042290620003a3565b565b60018060401b038111620004385760200290565b62000051565b6200044d620004539162000424565b62000090565b90565b5f7f6164612e706e6700000000000000000000000000000000000000000000000000910152565b6200048960076200015b565b90620004986020830162000456565b565b620004a46200047d565b90565b52565b5f7f64796d6b612e706e670000000000000000000000000000000000000000000000910152565b620004dd60096200015b565b90620004ec60208301620004aa565b565b620004f8620004d1565b90565b5f7f69737261656c692e706e67000000000000000000000000000000000000000000910152565b6200052e600b6200015b565b906200053d60208301620004fb565b565b6200054962000522565b90565b5f7f6b7261736f746159726f647374766f2e706e6700000000000000000000000000910152565b6200057f60136200015b565b906200058e602083016200054c565b565b6200059a62000573565b90565b5f7f6d626d2e706e6700000000000000000000000000000000000000000000000000910152565b620005d060076200015b565b90620005df602083016200059d565b565b620005eb620005c4565b90565b5f7f6d6f7573652e706e670000000000000000000000000000000000000000000000910152565b6200062160096200015b565b906200063060208301620005ee565b565b6200063c62000615565b90565b5f7f726f64656f2e706e670000000000000000000000000000000000000000000000910152565b6200067260096200015b565b9062000681602083016200063f565b565b6200068d62000666565b90565b90565b5490565b634e487b7160e01b5f52601160045260245ffd5b600190818003010490565b5f5260205f2090565b5f5260205f2090565b1c90565b90620006e1905f1990602003600802620006c8565b8154169055565b90620006fa905f1990600802620006c8565b191690565b816200070b91620006e8565b906002021790565b905f916200072e6200072582620006bf565b928354620006ff565b905555565b919290602082105f146200079957601f841160011462000760576200075a929350620006ff565b90555b5b565b50906200078d62000793936001620007836200077c85620006bf565b9262000276565b820191016200031c565b62000713565b6200075d565b50620007d98293620007ad600194620006bf565b620007d1620007bc8562000276565b820192601f861680620007e5575b5062000276565b01906200031c565b6002021790556200075e565b620007f390888603620006cc565b5f620007ca565b92909168010000000000000000821162000863576020115f146200085357602081105f1462000834576200082e91620006ff565b90555b5b565b60019160ff19166200084684620006bf565b5560020201905562000831565b6001915060020201905562000832565b62000051565b90815462000877816200023f565b90818311620008a5575b81831062000890575b50505050565b6200089b9362000733565b5f8080806200088a565b620008b383838387620007fa565b62000881565b5f620008c59162000869565b565b905f03620008dc57620008da90620008b9565b565b62000218565b5b818110620008ef575050565b80620008fe5f600193620008c7565b01620008e3565b909182811062000915575b505050565b6200093a620009336200092c6200094695620006ab565b92620006ab565b92620006b6565b918201910190620008e2565b5f808062000910565b906801000000000000000081116200097d5781620009716200097b9362000693565b9082815562000905565b565b62000051565b50600790565b5190565b5190565b9190601f8111620009a2575b505050565b620009b1620009dc93620006bf565b906020620009bf8462000276565b83019310620009e5575b620009d49062000276565b01906200031c565b5f80806200099d565b9150620009d481929050620009c9565b9062000a01816200098d565b9060018060401b03821162000ad25762000a288262000a2185546200023f565b8562000991565b602090601f831160011462000a615791809162000a4f935f9262000a54575b5050620006ff565b90555b565b90915001515f8062000a47565b601f1983169162000a7285620006bf565b925f5b81811062000ab95750916002939185600196941062000a9c575b5050500201905562000a52565b62000aae910151601f841690620006e8565b90555f808062000a8f565b9193602060018192878701518155019501920162000a75565b62000051565b9062000ae491620009f5565b565b62000b1362000b0c62000af98462000983565b9362000b0685856200094f565b62000690565b91620006b6565b5f915b83831062000b245750505050565b600160208262000b4062000b39849562000989565b8662000ad8565b0192019201919062000b16565b9062000b599162000ae6565b565b90565b90565b5f1b90565b62000b7f62000b7962000b859262000b5b565b62000b61565b62000b5e565b90565b62000b935f62000b66565b90565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a690565b62000bd362000bcd62000bd99262000b5b565b620002b0565b620002ad565b90565b62000be790620002ad565b5f19811462000bf65760010190565b62000697565b634e487b7160e01b5f52603260045260245ffd5b62000c1b8162000693565b82101562000c385762000c30600191620006b6565b910201905f90565b62000bfc565b905090565b905f929180549062000c6162000c59836200023f565b809462000c3e565b916001811690815f1462000cba575060011462000c7e575b505050565b62000c8d9192939450620006bf565b5f905b83821062000ca557505001905f808062000c79565b60018160209254848601520191019062000c90565b92949550505060ff191682528015150201905f808062000c79565b7f2f000000000000000000000000000000000000000000000000000000000000009052565b62000d0d60019162000d20949362000c43565b62000d188162000cd5565b019062000c43565b90565b62000d47929162000d549162000d386200003d565b94859260208401928362000cfa565b9081038252038362000065565b565b90565b5f5260205f2090565b5490565b62000d718162000d62565b82101562000d8e5762000d8660019162000d59565b910201905f90565b62000bfc565b919062000da85762000da691620009f5565b565b62000218565b908154916801000000000000000083101562000de3578262000dda91600162000de19501815562000d66565b9062000d94565b565b62000051565b90565b62000dfb62000e0191620002ad565b62000de9565b9052565b62000e1862000e20916020949362000c43565b809262000dec565b0190565b62000e3c62000e326200003d565b9283928362000e05565b03902090565b62000e4d9162000e24565b90565b9062000e5e60ff9162000b61565b9181191691161790565b151590565b62000e789062000e68565b90565b90565b9062000e9862000e9262000ea09262000e6d565b62000e7b565b825462000e50565b9055565b62000fba9062000ec862000eb7620001ba565b62000ec16200020b565b90620010a4565b62000ed4600d62000417565b62000f9362000ee460076200043e565b62000efb62000ef26200049a565b5f8301620004a7565b62000f1362000f09620004ee565b60208301620004a7565b62000f2b62000f216200053f565b60408301620004a7565b62000f4362000f3962000590565b60608301620004a7565b62000f5b62000f51620005e1565b60808301620004a7565b62000f7362000f6962000632565b60a08301620004a7565b62000f8b62000f8162000683565b60c08301620004a7565b600e62000b4d565b62000fa962000fa162000b88565b82906200117c565b5062000fb462000b96565b6200117c565b5062000fc65f62000bba565b5b8062000fe962000fe262000fdc600e62000693565b620002ad565b91620002ad565b101562001033576200102d906200102762001015600d6200100d600e859062000c10565b509062000d23565b62001021600c62000d56565b62000dae565b62000bdc565b62000fc7565b506200103f5f62000bba565b5b80620010626200105b62001055600c62000693565b620002ad565b91620002ad565b1015620010a1576200109b90620010955f6200108f601062001087600c869062000c10565b509062000e42565b62000e7e565b62000bdc565b62001040565b50565b90620010b091620010b2565b565b90620010be91620010c0565b565b90620010cc91620010ce565b565b90620010da91620010dc565b565b90620010ed620010f5925f62000ad8565b600162000ad8565b565b5f90565b620011069062000b5e565b90565b906200111590620010fb565b5f5260205260405f2090565b6200113a620011346200114092620000ad565b620002b0565b620000ad565b90565b6200114e9062001121565b90565b6200115c9062001143565b90565b906200116b9062001151565b5f5260205260405f2090565b5f0190565b62001186620010f7565b506200119f6200119882849062001273565b1562000e68565b5f146200123b57620011ce6001620011c85f620011bf600b869062001109565b0185906200115f565b62000e7e565b90620011d9620012a9565b906200121c620012156200120e7f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d95620010fb565b9262001151565b9262001151565b92620012276200003d565b80620012338162001177565b0390a4600190565b50505f90565b5f1c90565b60ff1690565b6200125b620012619162001241565b62001246565b90565b6200127090546200124c565b90565b620012a2915f620012956200129c936200128c620010f7565b50600b62001109565b016200115f565b62001264565b90565b5f90565b620012b3620012a5565b50339056fe60806040526004361015610013575b610d63565b61001d5f356101bc565b806301ffc9a7146101b757806306fdde03146101b2578063081812fc146101ad578063095ea7b3146101a857806318160ddd146101a357806323b872dd1461019e578063248a9ca3146101995780632f2ff15d146101945780632f745c591461018f57806332702c951461018a57806336568abe1461018557806340d097c31461018057806342842e0e1461017b5780634f6ccce7146101765780636352211e1461017157806370a082311461016c57806391d148541461016757806395d89b4114610162578063a217fddf1461015d578063a22cb46514610158578063b88d4fde14610153578063c87b56dd1461014e578063d539139314610149578063d547741f14610144578063e985e9c51461013f5763ee99205c0361000e57610d2e565b610cb4565b610c53565b610c1e565b610bba565b610b83565b610a0f565b61098a565b61091a565b6108e4565b6108af565b61087a565b610845565b610811565b6107dc565b61078a565b610755565b610640565b61060c565b6105aa565b610510565b6104a1565b61044b565b6103c1565b61030f565b610248565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b63ffffffff60e01b1690565b6101e9816101d4565b036101f057565b5f80fd5b90503590610201826101e0565b565b9060208282031261021c57610219915f016101f4565b90565b6101cc565b151590565b61022f90610221565b9052565b9190610246905f60208501940190610226565b565b346102785761027461026361025e366004610203565b6130db565b61026b6101c2565b91829182610233565b0390f35b6101c8565b5f91031261028757565b6101cc565b5190565b60209181520190565b5f5b8381106102ab575050905f910152565b80602091830151818501520161029b565b601f801991011690565b6102e56102ee6020936102f3936102dc8161028c565b93848093610290565b95869101610299565b6102bc565b0190565b61030c9160208201915f8184039101526102c6565b90565b3461033f5761031f36600461027d565b61033b61032a611340565b6103326101c2565b918291826102f7565b0390f35b6101c8565b90565b61035081610344565b0361035757565b5f80fd5b9050359061036882610347565b565b9060208282031261038357610380915f0161035b565b90565b6101cc565b60018060a01b031690565b61039c90610388565b90565b6103a890610393565b9052565b91906103bf905f6020850194019061039f565b565b346103f1576103ed6103dc6103d736600461036a565b611381565b6103e46101c2565b918291826103ac565b0390f35b6101c8565b6103ff81610393565b0361040657565b5f80fd5b90503590610417826103f6565b565b9190604083820312610441578061043561043e925f860161040a565b9360200161035b565b90565b6101cc565b5f0190565b3461047a5761046461045e366004610419565b9061136b565b61046c6101c2565b8061047681610446565b0390f35b6101c8565b61048890610344565b9052565b919061049f905f6020850194019061047f565b565b346104d1576104b136600461027d565b6104cd6104bc611962565b6104c46101c2565b9182918261048c565b0390f35b6101c8565b909160608284031261050b576105086104f1845f850161040a565b936104ff816020860161040a565b9360400161035b565b90565b6101cc565b3461053f576105296105233660046104d6565b91611426565b6105316101c2565b8061053b81610446565b0390f35b6101c8565b90565b61055081610544565b0361055757565b5f80fd5b9050359061056882610547565b565b9060208282031261058357610580915f0161055b565b90565b6101cc565b61059190610544565b9052565b91906105a8905f60208501940190610588565b565b346105da576105d66105c56105c036600461056a565b610e58565b6105cd6101c2565b91829182610595565b0390f35b6101c8565b919060408382031261060757806105fb610604925f860161055b565b9360200161040a565b90565b6101cc565b3461063b5761062561061f3660046105df565b90610ea4565b61062d6101c2565b8061063781610446565b0390f35b6101c8565b346106715761066d61065c610656366004610419565b906118f0565b6106646101c2565b9182918261048c565b0390f35b6101c8565b5190565b60209181520190565b60200190565b60209181520190565b6106b16106ba6020936106bf936106a88161028c565b93848093610689565b95869101610299565b6102bc565b0190565b906106cd91610692565b90565b60200190565b906106ea6106e383610676565b809261067a565b90816106fb60208302840194610683565b925f915b83831061070e57505050505090565b9091929394602061073061072a838560019503875289516106c3565b976106d0565b93019301919392906106ff565b6107529160208201915f8184039101526106d6565b90565b346107855761076536600461027d565b6107816107706123c9565b6107786101c2565b9182918261073d565b0390f35b6101c8565b346107b9576107a361079d3660046105df565b90610f5f565b6107ab6101c2565b806107b581610446565b0390f35b6101c8565b906020828203126107d7576107d4915f0161040a565b90565b6101cc565b3461080c576108086107f76107f23660046107be565b611fe4565b6107ff6101c2565b918291826102f7565b0390f35b6101c8565b346108405761082a6108243660046104d6565b91611520565b6108326101c2565b8061083c81610446565b0390f35b6101c8565b346108755761087161086061085b36600461036a565b6119e3565b6108686101c2565b9182918261048c565b0390f35b6101c8565b346108aa576108a661089561089036600461036a565b611218565b61089d6101c2565b918291826103ac565b0390f35b6101c8565b346108df576108db6108ca6108c53660046107be565b6111a7565b6108d26101c2565b9182918261048c565b0390f35b6101c8565b34610915576109116109006108fa3660046105df565b90610e06565b6109086101c2565b91829182610233565b0390f35b6101c8565b3461094a5761092a36600461027d565b610946610935611355565b61093d6101c2565b918291826102f7565b0390f35b6101c8565b90565b5f1b90565b61096b6109666109709261094f565b610952565b610544565b90565b61097c5f610957565b90565b610987610973565b90565b346109ba5761099a36600461027d565b6109b66109a561097f565b6109ad6101c2565b91829182610595565b0390f35b6101c8565b6109c881610221565b036109cf57565b5f80fd5b905035906109e0826109bf565b565b9190604083820312610a0a57806109fe610a07925f860161040a565b936020016109d3565b90565b6101cc565b34610a3e57610a28610a223660046109e2565b906113a0565b610a306101c2565b80610a3a81610446565b0390f35b6101c8565b5f80fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b90610a69906102bc565b810190811067ffffffffffffffff821117610a8357604052565b610a4b565b90610a9b610a946101c2565b9283610a5f565b565b67ffffffffffffffff8111610abb57610ab76020916102bc565b0190565b610a4b565b90825f939282370152565b90929192610ae0610adb82610a9d565b610a88565b93818552602085019082840111610afc57610afa92610ac0565b565b610a47565b9080601f83011215610b1f57816020610b1c93359101610acb565b90565b610a43565b90608082820312610b7e57610b3b815f840161040a565b92610b49826020850161040a565b92610b57836040830161035b565b92606082013567ffffffffffffffff8111610b7957610b769201610b01565b90565b6101d0565b6101cc565b34610bb557610b9f610b96366004610b24565b92919091611536565b610ba76101c2565b80610bb181610446565b0390f35b6101c8565b34610bea57610be6610bd5610bd036600461036a565b612a51565b610bdd6101c2565b918291826102f7565b0390f35b6101c8565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a690565b610c1b610bef565b90565b34610c4e57610c2e36600461027d565b610c4a610c39610c13565b610c416101c2565b91829182610595565b0390f35b6101c8565b34610c8257610c6c610c663660046105df565b90610f53565b610c746101c2565b80610c7e81610446565b0390f35b6101c8565b9190604083820312610caf5780610ca3610cac925f860161040a565b9360200161040a565b90565b6101cc565b34610ce557610ce1610cd0610cca366004610c87565b906113cc565b610cd86101c2565b91829182610233565b0390f35b6101c8565b1c90565b60018060a01b031690565b610d09906008610d0e9302610cea565b610cee565b90565b90610d1c9154610cf9565b90565b610d2b60125f90610d11565b90565b34610d5e57610d3e36600461027d565b610d5a610d49610d1f565b610d516101c2565b918291826103ac565b0390f35b6101c8565b5f80fd5b5f90565b610d7490610544565b90565b90610d8190610d6b565b5f5260205260405f2090565b90565b610da4610d9f610da992610388565b610d8d565b610388565b90565b610db590610d90565b90565b610dc190610dac565b90565b90610dce90610db8565b5f5260205260405f2090565b5f1c90565b60ff1690565b610df1610df691610dda565b610ddf565b90565b610e039054610de5565b90565b610e2d915f610e22610e2893610e1a610d67565b50600b610d77565b01610dc4565b610df9565b90565b5f90565b90565b610e43610e4891610dda565b610e34565b90565b610e559054610e37565b90565b6001610e71610e7792610e69610e30565b50600b610d77565b01610e4b565b90565b90610e9591610e90610e8b82610e58565b610eb0565b610e97565b565b90610ea191610ff3565b50565b90610eae91610e7a565b565b610ec290610ebc611cec565b90610ee7565b565b916020610ee5929493610ede60408201965f83019061039f565b0190610588565b565b90610efc610ef6838390610e06565b15610221565b610f04575050565b610f25610f0f6101c2565b92839263e2517d3f60e01b845260048401610ec4565b0390fd5b90610f4491610f3f610f3a82610e58565b610eb0565b610f46565b565b90610f509161109f565b50565b90610f5d91610f29565b565b9080610f7a610f74610f6f611cec565b610393565b91610393565b03610f8b57610f889161109f565b50565b610f936101c2565b63334bd91960e11b815280610faa60048201610446565b0390fd5b90610fba60ff91610952565b9181191691161790565b610fcd90610221565b90565b90565b90610fe8610fe3610fef92610fc4565b610fd0565b8254610fae565b9055565b610ffb610d67565b5061101061100a828490610e06565b15610221565b5f146110995761103860016110335f61102b600b8690610d77565b018590610dc4565b610fd3565b90611041611cec565b9061107e6110786110727f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d95610d6b565b92610db8565b92610db8565b926110876101c2565b8061109181610446565b0390a4600190565b50505f90565b6110a7610d67565b506110b3818390610e06565b5f1461113b576110da5f6110d55f6110cd600b8690610d77565b018590610dc4565b610fd3565b906110e3611cec565b9061112061111a6111147ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b95610d6b565b92610db8565b92610db8565b926111296101c2565b8061113381610446565b0390a4600190565b50505f90565b5f90565b61115961115461115e9261094f565b610d8d565b610388565b90565b61116a90611145565b90565b9061117790610db8565b5f5260205260405f2090565b90565b61119261119791610dda565b611183565b90565b6111a49054611186565b90565b6111af611141565b50806111cb6111c56111c05f611161565b610393565b91610393565b146111e6576111de6111e391600361116d565b61119a565b90565b6112106111f25f611161565b6111fa6101c2565b9182916322718ad960e21b8352600483016103ac565b0390fd5b5f90565b61122a90611224611214565b50611825565b90565b606090565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015611266575b602083101461126157565b611232565b91607f1691611256565b5f5260205f2090565b905f929180549061129361128c83611246565b8094610689565b916001811690815f146112ea57506001146112ae575b505050565b6112bb9192939450611270565b915f925b8184106112d257505001905f80806112a9565b600181602092959395548486015201910192906112bf565b92949550505060ff19168252151560200201905f80806112a9565b9061130f91611279565b90565b9061133261132b926113226101c2565b93848092611305565b0383610a5f565b565b61133d90611312565b90565b61134861122d565b506113525f611334565b90565b61135d61122d565b506113686001611334565b90565b9061137f9190611379611cec565b916115ce565b565b61139d9061138d611214565b5061139781611825565b506115af565b90565b6113b4916113ac611cec565b91909161176d565b565b906113c090610db8565b5f5260205260405f2090565b6113f1916113e76113ec926113df610d67565b5060056113b6565b610dc4565b610df9565b90565b60409061141d611424949695939661141360608401985f85019061039f565b602083019061047f565b019061039f565b565b91908061144361143d6114385f611161565b610393565b91610393565b146114a15761145b9082611455611cec565b916123df565b918261146f61146983610393565b91610393565b0361147957505050565b61149d9091926114876101c2565b9384936364283d7b60e01b8552600485016113f4565b0390fd5b6114cb6114ad5f611161565b6114b56101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b67ffffffffffffffff81116114ed576114e96020916102bc565b0190565b610a4b565b906115046114ff836114cf565b610a88565b918252565b6115125f6114f2565b90565b61151d611509565b90565b91611534929161152e611515565b92611536565b565b9161155a939161154884828491611426565b611550611cec565b9390919293611b8a565b565b61157061156b61157592610344565b610d8d565b610344565b90565b906115829061155c565b5f5260205260405f2090565b61159a61159f91610dda565b610cee565b90565b6115ac905461158e565b90565b6115c66115cb916115be611214565b506004611578565b6115a2565b90565b916115dc929160019261161c565b565b906115ef60018060a01b0391610952565b9181191691161790565b90565b9061161161160c61161892610db8565b6115f9565b82546115de565b9055565b91909280801561174a575b611645575b50509061163e61164392916004611578565b6115fc565b565b61164e84611825565b918061166a61166461165f5f611161565b610393565b91610393565b14158061172f575b80611715575b6116ef57509161163e916116439493611694575b50919261162c565b8184906116d36116cd6116c77f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92595610db8565b92610db8565b9261155c565b926116dc6101c2565b806116e681610446565b0390a45f61168c565b611711906116fb6101c2565b91829163a9fbf51f60e01b8352600483016103ac565b0390fd5b5061172a6117248483906113cc565b15610221565b611678565b508261174361173d83610393565b91610393565b1415611672565b508161176661176061175b5f611161565b610393565b91610393565b1415611627565b9190918261178b6117856117805f611161565b610393565b91610393565b146117ff576117af826117aa6117a3600585906113b6565b8690610dc4565b610fd3565b9190916117fa6117e86117e27f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610db8565b93610db8565b936117f16101c2565b91829182610233565b0390a3565b6118218361180b6101c2565b918291630b61174360e31b8352600483016103ac565b0390fd5b61182d611214565b5061183781611882565b908161185361184d6118485f611161565b610393565b91610393565b1461185c575090565b61187e906118686101c2565b918291637e27328960e01b83526004830161048c565b0390fd5b61189961189e91611891611214565b506002611578565b6115a2565b90565b9160206118c29294936118bb60408201965f83019061039f565b019061047f565b565b906118ce90610db8565b5f5260205260405f2090565b906118e49061155c565b5f5260205260405f2090565b6118f8611141565b508161191461190e611909846111a7565b610344565b91610344565b1015611939576119369161192c6119319260066118c4565b6118da565b61119a565b90565b61195a6119446101c2565b92839263295f44f760e21b8452600484016118a1565b0390fd5b5490565b61196a611141565b50611975600861195e565b90565b634e487b7160e01b5f52603260045260245ffd5b5f5260205f2090565b61199e8161195e565b8210156119b8576119b060019161198c565b910201905f90565b611978565b6119cd9060086119d29302610cea565b611183565b90565b906119e091546119bd565b90565b6119eb611141565b5080611a06611a006119fb611962565b610344565b91610344565b1015611a2357611a1a611a20916008611995565b906119d5565b90565b611a2c5f611161565b611a4d611a376101c2565b92839263295f44f760e21b8452600484016118a1565b0390fd5b611a65611a60611a6a9261094f565b610d8d565b610344565b90565b611a7690610d90565b90565b611a8290611a6d565b90565b611a8e90610dac565b90565b60e01b90565b90505190611aa4826101e0565b565b90602082820312611abf57611abc915f01611a97565b90565b6101cc565b5190565b60209181520190565b611af0611af9602093611afe93611ae781611ac4565b93848093611ac8565b95869101610299565b6102bc565b0190565b9092611b3590611b2b611b429694611b2160808601975f87019061039f565b602085019061039f565b604083019061047f565b6060818403910152611ad1565b90565b90611b57611b5283610a9d565b610a88565b918252565b606090565b3d5f14611b7c57611b713d611b45565b903d5f602084013e5b565b611b84611b5c565b90611b7a565b9193843b611ba0611b9a5f611a51565b91610344565b11611bad575b5050505050565b611be55f602094611bf0611bc8611bc38a611a79565b611a85565b9463150b7a02929698611bd96101c2565b998a9889978896611a91565b865260048601611b02565b03925af180915f92611cbc575b50155f14611c7257506001611c1857505b5f80808080611ba6565b611c20611b61565b90611c2a82611ac4565b611c3c611c365f611a51565b91610344565b145f14611c6957611c6590611c4f6101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b50602081519101fd5b611c8b611c85630a85bd0160e11b6101d4565b916101d4565b03611c965750611c0e565b611cb890611ca26101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b611cde91925060203d8111611ce5575b611cd68183610a5f565b810190611aa6565b905f611bfd565b503d611ccc565b611cf4611214565b503390565b90611d1391611d0e611d09610bef565b610eb0565b611ede565b90565b5490565b5f7f4e6f204e46547320696e697469616c697a656400000000000000000000000000910152565b611d4e6013602092610290565b611d5781611d1a565b0190565b611d709060208101905f818303910152611d41565b90565b15611d7a57565b611d826101c2565b62461bcd60e51b815280611d9860048201611d5b565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b611db990610344565b5f198114611dc75760010190565b611d9c565b5f5260205f2090565b611dde81611d16565b821015611df857611df0600191611dcc565b910201905f90565b611978565b90611e0790610db8565b5f5260205260405f2090565b905090565b611e3d611e3492602092611e2b8161028c565b94858093611e13565b93849101610299565b0190565b90565b611e50611e5591610344565b611e41565b9052565b611e69611e709160209493611e18565b8092611e44565b0190565b611e88611e7f6101c2565b92839283611e59565b03902090565b611e9791611e74565b90565b90611ea65f1991610952565b9181191691161790565b90565b90611ec8611ec3611ecf9261155c565b611eb0565b8254611e9a565b9055565b611edb611509565b90565b50611f04611eec600c611d16565b611efe611ef85f611a51565b91610344565b11611d73565b611f0d5f611a51565b5b80611f2a611f24611f1f600c611d16565b610344565b91610344565b1015611fd757611f45611f3f600c8390611dd5565b50611334565b611f6c611f66611f61611f5a60118790611dfd565b8490611e8e565b610df9565b15610221565b611f7f5750611f7a90611db0565b611f0e565b91611fd49150611fcd611f92600f61119a565b611fa5611f9e82611db0565b600f611eb3565b91611fc66001611fc1611fba60118590611dfd565b8890611e8e565b610fd3565b8290611ff8565b82906122e5565b90565b5050611fe1611ed3565b90565b611ff590611ff061122d565b611cf9565b90565b9061200c9190612006611515565b9161200e565b565b909161203a9261201f83829061203c565b612027611cec565b926120315f611161565b90919293611b8a565b565b908161205861205261204d5f611161565b610393565b91610393565b146120c057612071919061206b5f611161565b916123df565b61208b6120856120805f611161565b610393565b91610393565b0361209257565b6120bc61209e5f611161565b6120a66101c2565b9182916339e3563760e11b8352600483016103ac565b0390fd5b6120ea6120cc5f611161565b6120d46101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b906120f89061155c565b5f5260205260405f2090565b601f602091010490565b1b90565b9190600861212d9102916121275f198461210e565b9261210e565b9181191691161790565b919061214d6121486121559361155c565b611eb0565b908354612112565b9055565b61216b91612165611141565b91612137565b565b5b818110612179575050565b806121865f600193612159565b0161216e565b9190601f811161219c575b505050565b6121a86121cd93611270565b9060206121b484612104565b830193106121d5575b6121c690612104565b019061216d565b5f8080612197565b91506121c6819290506121bd565b906121f3905f1990600802610cea565b191690565b81612202916121e3565b906002021790565b906122148161028c565b9067ffffffffffffffff82116122d457612238826122328554611246565b8561218c565b602090601f831160011461226c5791809161225b935f92612260575b50506121f8565b90555b565b90915001515f80612254565b601f1983169161227b85611270565b925f5b8181106122bc575091600293918560019694106122a2575b5050500201905561225e565b6122b2910151601f8416906121e3565b90555f8080612296565b9193602060018192878701518155019501920161227e565b610a4b565b906122e39161220a565b565b906122fb906122f6600a84906120ee565b6122d9565b6123317ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7916123286101c2565b9182918261048c565b0390a1565b606090565b67ffffffffffffffff81116123535760208091020190565b610a4b565b9061236a6123658361233b565b610a88565b918252565b9061237982611d16565b61238281612358565b926123906020850191611dcc565b5f915b8383106123a05750505050565b6001602081926123af85611334565b815201920192019190612393565b6123c69061236f565b90565b6123d1612336565b506123dc600c6123bd565b90565b916123f5926123ec611214565b509190916123f8565b90565b909161241190612406611214565b508290849091612507565b918261242d6124276124225f611161565b610393565b91610393565b145f1461249e5761243d81612896565b5b8161245961245361244e5f611161565b610393565b91610393565b145f1461246e5761246a91506129ba565b5b90565b8261248161247b84610393565b91610393565b0361248e575b505061246b565b612497916127d7565b5f80612487565b826124b16124ab84610393565b91610393565b036124bc575b61243e565b6124c78382906128c9565b6124b7565b90565b6124e36124de6124e8926124cc565b610d8d565b610344565b90565b906124f69103610344565b90565b906125049101610344565b90565b90612510611214565b5061251a81611882565b928061253661253061252b5f611161565b610393565b91610393565b03612675575b508261255861255261254d5f611161565b610393565b91610393565b03612621575b8161257961257361256e5f611161565b610393565b91610393565b036125eb575b6125948261258f60028490611578565b6115fc565b82916125d26125cc6125c67fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95610db8565b92610db8565b9261155c565b926125db6101c2565b806125e581610446565b0390a490565b61261c6125f860016124cf565b6126166126076003869061116d565b916126118361119a565b6124f9565b90611eb3565b61257f565b61263f61262d5f611161565b826126375f611161565b905f9261161c565b61267061264c60016124cf565b61266a61265b6003879061116d565b916126658361119a565b6124eb565b90611eb3565b61255e565b6126829084908391612688565b5f61253c565b61269d61269782848691612712565b15610221565b6126a657505050565b6126c06126ba6126b55f611161565b610393565b91610393565b145f146126ed576126e9826126d36101c2565b918291637e27328960e01b83526004830161048c565b0390fd5b61270e6126f86101c2565b92839263177e802f60e01b8452600484016118a1565b0390fd5b919061271c610d67565b508061273861273261272d5f611161565b610393565b91610393565b14159283612747575b50505090565b809192935061275e61275884610393565b91610393565b149081156127a0575b5091821561277a575b50505f8080612741565b61279891925061278c612792916115af565b92610393565b91610393565b145f80612770565b6127ac915082906113cc565b5f612767565b6127c16127c791939293610344565b92610344565b82039182116127d257565b611d9c565b906128226128279261281a6127fe6127ee836111a7565b6127f860016124cf565b906127b2565b9161281561280e869260066118c4565b84906118da565b611eb3565b9160076118da565b611eb3565b565b90565b5f5260205f2090565b5490565b61284281612835565b82101561285c5761285460019161282c565b910201905f90565b611978565b9081549168010000000000000000831015612891578261288991600161288f95018155612839565b90612137565b565b610a4b565b6128c7906128b86128a7600861195e565b6128b3600984906118da565b611eb3565b6128c26008612829565b612861565b565b61292e612933925f92612929846129246128e2846111a7565b946129026128fa6128f5600784906118da565b61119a565b9560066118c4565b948061291661291089610344565b91610344565b03612935575b5060076118da565b612159565b6118da565b612159565b565b6129719061296c61294f61294a898b906118da565b61119a565b916129648361295f8b84906118da565b611eb3565b9160076118da565b611eb3565b5f61291c565b634e487b7160e01b5f52603160045260245ffd5b61299481612835565b80156129b55760019003906129b26129ac8383612839565b90612159565b55565b612977565b5f612a38612a3d92612a316129e26129d2600861195e565b6129dc60016124cf565b906127b2565b612a2c612a0d612a076129ff6129fa600988906118da565b61119a565b936008611995565b906119d5565b91612a2483612a1e60088490611995565b90612137565b9160096118da565b611eb3565b60096118da565b612159565b612a4f612a4a6008612829565b61298b565b565b612a6390612a5d61122d565b50612aad565b90565b90565b612a7790612a7d9392611e18565b90611e18565b90565b612a9f9291612aab91612a916101c2565b948592602084019283612a69565b90810382520383610a5f565b565b612ab561122d565b50612abf81611825565b50612ad4612acf600a83906120ee565b611334565b612adc612bb9565b612aed612ae882612a66565b611ac4565b612aff612af95f611a51565b91610344565b14612b4757612b15612b1083612a66565b611ac4565b612b27612b215f611a51565b91610344565b11612b3a575050612b3790612b4d565b90565b612b449250612a80565b90565b50905090565b612b5561122d565b50612b5f81611825565b50612b68612bb9565b90612b7a612b7583612a66565b611ac4565b612b8c612b865f611a51565b91610344565b115f14612baa57612ba0612ba69291612c5d565b90612a80565b5b90565b5050612bb4611ed3565b612ba7565b612bc161122d565b50612bca611ed3565b90565b369037565b90612bf7612bdf836114f2565b92602080612bed86936114cf565b9201910390612bcd565b565b6001612c059103610344565b90565b90565b612c1f612c1a612c2492612c08565b610d8d565b610344565b90565b634e487b7160e01b5f52601260045260245ffd5b612c47612c4d91610344565b91610344565b908115612c58570490565b612c27565b612c6561122d565b50612c82612c7282612e7a565b612c7c60016124cf565b906124f9565b90612c8c82612bd2565b91612c95611141565b5060208301015b600115612cff57612caf612cdb91612bf9565b916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353612cd5600a612c0b565b90612c3b565b80612cee612ce85f611a51565b91610344565b14612cf95790612c9c565b50505b90565b5050612cfc565b90565b612d1d612d18612d2292612d06565b610d8d565b610344565b90565b90565b612d3c612d37612d4192612d25565b610d8d565b610344565b90565b90565b612d5b612d56612d6092612d44565b610d8d565b610344565b90565b90565b612d7a612d75612d7f92612d63565b610d8d565b610344565b90565b90565b612d99612d94612d9e92612d82565b610d8d565b610344565b90565b90565b612db8612db3612dbd92612da1565b610d8d565b610344565b90565b90565b612dd7612dd2612ddc92612dc0565b610d8d565b610344565b90565b90565b612df6612df1612dfb92612ddf565b610d8d565b610344565b90565b90565b612e15612e10612e1a92612dfe565b610d8d565b610344565b90565b90565b612e34612e2f612e3992612e1d565b610d8d565b610344565b90565b90565b612e53612e4e612e5892612e3c565b610d8d565b610344565b90565b90565b612e72612e6d612e7792612e5b565b610d8d565b610344565b90565b612e82611141565b50612e8c5f611a51565b9080612ebb612eb57a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000612d09565b91610344565b1015613093575b80612ee3612edd6d04ee2d6d415b85acef8100000000612d47565b91610344565b1015613058575b80612f04612efe662386f26fc10000612d85565b91610344565b1015613024575b80612f22612f1c6305f5e100612dc3565b91610344565b1015612ff3575b80612f3e612f38612710612e01565b91610344565b1015612fc4575b80612f59612f536064612e3f565b91610344565b1015612f96575b612f73612f6d600a612c0b565b91610344565b1015612f7d575b90565b612f9190612f8b60016124cf565b906124f9565b612f7a565b612fad612fbe91612fa76064612e3f565b90612c3b565b91612fb86002612e5e565b906124f9565b90612f60565b612fdc612fed91612fd6612710612e01565b90612c3b565b91612fe76004612e20565b906124f9565b90612f45565b61300d61301e916130076305f5e100612dc3565b90612c3b565b916130186008612de2565b906124f9565b90612f29565b6130416130529161303b662386f26fc10000612d85565b90612c3b565b9161304c6010612da4565b906124f9565b90612f0b565b61307c61308d916130766d04ee2d6d415b85acef8100000000612d47565b90612c3b565b916130876020612d66565b906124f9565b90612eea565b6130c46130d5916130be7a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000612d09565b90612c3b565b916130cf6040612d28565b906124f9565b90612ec2565b6130ed906130e7610d67565b506130f0565b90565b6130f8610d67565b508061311361310d637965db0b60e01b6101d4565b916101d4565b14908115613120575b5090565b61312a915061315f565b5f61311c565b90565b61314761314261314c92613130565b611a91565b6101d4565b90565b61315c6349064906613133565b90565b613167610d67565b508061318261317c61317761314f565b6101d4565b916101d4565b1490811561318f575b5090565b613199915061319f565b5f61318b565b6131a7610d67565b50806131c26131bc63780e9d6360e01b6101d4565b916101d4565b149081156131cf575b5090565b6131d991506131df565b5f6131cb565b6131e7610d67565b50806132026131fc6380ac58cd60e01b6101d4565b916101d4565b148015613226575b908115613216575b5090565b6132209150613247565b5f613212565b508061324161323b635b5e139f60e01b6101d4565b916101d4565b1461320a565b61324f610d67565b506132696132636301ffc9a760e01b6101d4565b916101d4565b149056fea264697066735822122045ed1ed9385a12179d6f34f0026c955f5e1da00d13123a804255ac2cd79e96af64736f6c63430008150033",
  "deployedBytecode": "0x60806040526004361015610013575b610d63565b61001d5f356101bc565b806301ffc9a7146101b757806306fdde03146101b2578063081812fc146101ad578063095ea7b3146101a857806318160ddd146101a357806323b872dd1461019e578063248a9ca3146101995780632f2ff15d146101945780632f745c591461018f57806332702c951461018a57806336568abe1461018557806340d097c31461018057806342842e0e1461017b5780634f6ccce7146101765780636352211e1461017157806370a082311461016c57806391d148541461016757806395d89b4114610162578063a217fddf1461015d578063a22cb46514610158578063b88d4fde14610153578063c87b56dd1461014e578063d539139314610149578063d547741f14610144578063e985e9c51461013f5763ee99205c0361000e57610d2e565b610cb4565b610c53565b610c1e565b610bba565b610b83565b610a0f565b61098a565b61091a565b6108e4565b6108af565b61087a565b610845565b610811565b6107dc565b61078a565b610755565b610640565b61060c565b6105aa565b610510565b6104a1565b61044b565b6103c1565b61030f565b610248565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b63ffffffff60e01b1690565b6101e9816101d4565b036101f057565b5f80fd5b90503590610201826101e0565b565b9060208282031261021c57610219915f016101f4565b90565b6101cc565b151590565b61022f90610221565b9052565b9190610246905f60208501940190610226565b565b346102785761027461026361025e366004610203565b6130db565b61026b6101c2565b91829182610233565b0390f35b6101c8565b5f91031261028757565b6101cc565b5190565b60209181520190565b5f5b8381106102ab575050905f910152565b80602091830151818501520161029b565b601f801991011690565b6102e56102ee6020936102f3936102dc8161028c565b93848093610290565b95869101610299565b6102bc565b0190565b61030c9160208201915f8184039101526102c6565b90565b3461033f5761031f36600461027d565b61033b61032a611340565b6103326101c2565b918291826102f7565b0390f35b6101c8565b90565b61035081610344565b0361035757565b5f80fd5b9050359061036882610347565b565b9060208282031261038357610380915f0161035b565b90565b6101cc565b60018060a01b031690565b61039c90610388565b90565b6103a890610393565b9052565b91906103bf905f6020850194019061039f565b565b346103f1576103ed6103dc6103d736600461036a565b611381565b6103e46101c2565b918291826103ac565b0390f35b6101c8565b6103ff81610393565b0361040657565b5f80fd5b90503590610417826103f6565b565b9190604083820312610441578061043561043e925f860161040a565b9360200161035b565b90565b6101cc565b5f0190565b3461047a5761046461045e366004610419565b9061136b565b61046c6101c2565b8061047681610446565b0390f35b6101c8565b61048890610344565b9052565b919061049f905f6020850194019061047f565b565b346104d1576104b136600461027d565b6104cd6104bc611962565b6104c46101c2565b9182918261048c565b0390f35b6101c8565b909160608284031261050b576105086104f1845f850161040a565b936104ff816020860161040a565b9360400161035b565b90565b6101cc565b3461053f576105296105233660046104d6565b91611426565b6105316101c2565b8061053b81610446565b0390f35b6101c8565b90565b61055081610544565b0361055757565b5f80fd5b9050359061056882610547565b565b9060208282031261058357610580915f0161055b565b90565b6101cc565b61059190610544565b9052565b91906105a8905f60208501940190610588565b565b346105da576105d66105c56105c036600461056a565b610e58565b6105cd6101c2565b91829182610595565b0390f35b6101c8565b919060408382031261060757806105fb610604925f860161055b565b9360200161040a565b90565b6101cc565b3461063b5761062561061f3660046105df565b90610ea4565b61062d6101c2565b8061063781610446565b0390f35b6101c8565b346106715761066d61065c610656366004610419565b906118f0565b6106646101c2565b9182918261048c565b0390f35b6101c8565b5190565b60209181520190565b60200190565b60209181520190565b6106b16106ba6020936106bf936106a88161028c565b93848093610689565b95869101610299565b6102bc565b0190565b906106cd91610692565b90565b60200190565b906106ea6106e383610676565b809261067a565b90816106fb60208302840194610683565b925f915b83831061070e57505050505090565b9091929394602061073061072a838560019503875289516106c3565b976106d0565b93019301919392906106ff565b6107529160208201915f8184039101526106d6565b90565b346107855761076536600461027d565b6107816107706123c9565b6107786101c2565b9182918261073d565b0390f35b6101c8565b346107b9576107a361079d3660046105df565b90610f5f565b6107ab6101c2565b806107b581610446565b0390f35b6101c8565b906020828203126107d7576107d4915f0161040a565b90565b6101cc565b3461080c576108086107f76107f23660046107be565b611fe4565b6107ff6101c2565b918291826102f7565b0390f35b6101c8565b346108405761082a6108243660046104d6565b91611520565b6108326101c2565b8061083c81610446565b0390f35b6101c8565b346108755761087161086061085b36600461036a565b6119e3565b6108686101c2565b9182918261048c565b0390f35b6101c8565b346108aa576108a661089561089036600461036a565b611218565b61089d6101c2565b918291826103ac565b0390f35b6101c8565b346108df576108db6108ca6108c53660046107be565b6111a7565b6108d26101c2565b9182918261048c565b0390f35b6101c8565b34610915576109116109006108fa3660046105df565b90610e06565b6109086101c2565b91829182610233565b0390f35b6101c8565b3461094a5761092a36600461027d565b610946610935611355565b61093d6101c2565b918291826102f7565b0390f35b6101c8565b90565b5f1b90565b61096b6109666109709261094f565b610952565b610544565b90565b61097c5f610957565b90565b610987610973565b90565b346109ba5761099a36600461027d565b6109b66109a561097f565b6109ad6101c2565b91829182610595565b0390f35b6101c8565b6109c881610221565b036109cf57565b5f80fd5b905035906109e0826109bf565b565b9190604083820312610a0a57806109fe610a07925f860161040a565b936020016109d3565b90565b6101cc565b34610a3e57610a28610a223660046109e2565b906113a0565b610a306101c2565b80610a3a81610446565b0390f35b6101c8565b5f80fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b90610a69906102bc565b810190811067ffffffffffffffff821117610a8357604052565b610a4b565b90610a9b610a946101c2565b9283610a5f565b565b67ffffffffffffffff8111610abb57610ab76020916102bc565b0190565b610a4b565b90825f939282370152565b90929192610ae0610adb82610a9d565b610a88565b93818552602085019082840111610afc57610afa92610ac0565b565b610a47565b9080601f83011215610b1f57816020610b1c93359101610acb565b90565b610a43565b90608082820312610b7e57610b3b815f840161040a565b92610b49826020850161040a565b92610b57836040830161035b565b92606082013567ffffffffffffffff8111610b7957610b769201610b01565b90565b6101d0565b6101cc565b34610bb557610b9f610b96366004610b24565b92919091611536565b610ba76101c2565b80610bb181610446565b0390f35b6101c8565b34610bea57610be6610bd5610bd036600461036a565b612a51565b610bdd6101c2565b918291826102f7565b0390f35b6101c8565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a690565b610c1b610bef565b90565b34610c4e57610c2e36600461027d565b610c4a610c39610c13565b610c416101c2565b91829182610595565b0390f35b6101c8565b34610c8257610c6c610c663660046105df565b90610f53565b610c746101c2565b80610c7e81610446565b0390f35b6101c8565b9190604083820312610caf5780610ca3610cac925f860161040a565b9360200161040a565b90565b6101cc565b34610ce557610ce1610cd0610cca366004610c87565b906113cc565b610cd86101c2565b91829182610233565b0390f35b6101c8565b1c90565b60018060a01b031690565b610d09906008610d0e9302610cea565b610cee565b90565b90610d1c9154610cf9565b90565b610d2b60125f90610d11565b90565b34610d5e57610d3e36600461027d565b610d5a610d49610d1f565b610d516101c2565b918291826103ac565b0390f35b6101c8565b5f80fd5b5f90565b610d7490610544565b90565b90610d8190610d6b565b5f5260205260405f2090565b90565b610da4610d9f610da992610388565b610d8d565b610388565b90565b610db590610d90565b90565b610dc190610dac565b90565b90610dce90610db8565b5f5260205260405f2090565b5f1c90565b60ff1690565b610df1610df691610dda565b610ddf565b90565b610e039054610de5565b90565b610e2d915f610e22610e2893610e1a610d67565b50600b610d77565b01610dc4565b610df9565b90565b5f90565b90565b610e43610e4891610dda565b610e34565b90565b610e559054610e37565b90565b6001610e71610e7792610e69610e30565b50600b610d77565b01610e4b565b90565b90610e9591610e90610e8b82610e58565b610eb0565b610e97565b565b90610ea191610ff3565b50565b90610eae91610e7a565b565b610ec290610ebc611cec565b90610ee7565b565b916020610ee5929493610ede60408201965f83019061039f565b0190610588565b565b90610efc610ef6838390610e06565b15610221565b610f04575050565b610f25610f0f6101c2565b92839263e2517d3f60e01b845260048401610ec4565b0390fd5b90610f4491610f3f610f3a82610e58565b610eb0565b610f46565b565b90610f509161109f565b50565b90610f5d91610f29565b565b9080610f7a610f74610f6f611cec565b610393565b91610393565b03610f8b57610f889161109f565b50565b610f936101c2565b63334bd91960e11b815280610faa60048201610446565b0390fd5b90610fba60ff91610952565b9181191691161790565b610fcd90610221565b90565b90565b90610fe8610fe3610fef92610fc4565b610fd0565b8254610fae565b9055565b610ffb610d67565b5061101061100a828490610e06565b15610221565b5f146110995761103860016110335f61102b600b8690610d77565b018590610dc4565b610fd3565b90611041611cec565b9061107e6110786110727f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d95610d6b565b92610db8565b92610db8565b926110876101c2565b8061109181610446565b0390a4600190565b50505f90565b6110a7610d67565b506110b3818390610e06565b5f1461113b576110da5f6110d55f6110cd600b8690610d77565b018590610dc4565b610fd3565b906110e3611cec565b9061112061111a6111147ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b95610d6b565b92610db8565b92610db8565b926111296101c2565b8061113381610446565b0390a4600190565b50505f90565b5f90565b61115961115461115e9261094f565b610d8d565b610388565b90565b61116a90611145565b90565b9061117790610db8565b5f5260205260405f2090565b90565b61119261119791610dda565b611183565b90565b6111a49054611186565b90565b6111af611141565b50806111cb6111c56111c05f611161565b610393565b91610393565b146111e6576111de6111e391600361116d565b61119a565b90565b6112106111f25f611161565b6111fa6101c2565b9182916322718ad960e21b8352600483016103ac565b0390fd5b5f90565b61122a90611224611214565b50611825565b90565b606090565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015611266575b602083101461126157565b611232565b91607f1691611256565b5f5260205f2090565b905f929180549061129361128c83611246565b8094610689565b916001811690815f146112ea57506001146112ae575b505050565b6112bb9192939450611270565b915f925b8184106112d257505001905f80806112a9565b600181602092959395548486015201910192906112bf565b92949550505060ff19168252151560200201905f80806112a9565b9061130f91611279565b90565b9061133261132b926113226101c2565b93848092611305565b0383610a5f565b565b61133d90611312565b90565b61134861122d565b506113525f611334565b90565b61135d61122d565b506113686001611334565b90565b9061137f9190611379611cec565b916115ce565b565b61139d9061138d611214565b5061139781611825565b506115af565b90565b6113b4916113ac611cec565b91909161176d565b565b906113c090610db8565b5f5260205260405f2090565b6113f1916113e76113ec926113df610d67565b5060056113b6565b610dc4565b610df9565b90565b60409061141d611424949695939661141360608401985f85019061039f565b602083019061047f565b019061039f565b565b91908061144361143d6114385f611161565b610393565b91610393565b146114a15761145b9082611455611cec565b916123df565b918261146f61146983610393565b91610393565b0361147957505050565b61149d9091926114876101c2565b9384936364283d7b60e01b8552600485016113f4565b0390fd5b6114cb6114ad5f611161565b6114b56101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b67ffffffffffffffff81116114ed576114e96020916102bc565b0190565b610a4b565b906115046114ff836114cf565b610a88565b918252565b6115125f6114f2565b90565b61151d611509565b90565b91611534929161152e611515565b92611536565b565b9161155a939161154884828491611426565b611550611cec565b9390919293611b8a565b565b61157061156b61157592610344565b610d8d565b610344565b90565b906115829061155c565b5f5260205260405f2090565b61159a61159f91610dda565b610cee565b90565b6115ac905461158e565b90565b6115c66115cb916115be611214565b506004611578565b6115a2565b90565b916115dc929160019261161c565b565b906115ef60018060a01b0391610952565b9181191691161790565b90565b9061161161160c61161892610db8565b6115f9565b82546115de565b9055565b91909280801561174a575b611645575b50509061163e61164392916004611578565b6115fc565b565b61164e84611825565b918061166a61166461165f5f611161565b610393565b91610393565b14158061172f575b80611715575b6116ef57509161163e916116439493611694575b50919261162c565b8184906116d36116cd6116c77f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92595610db8565b92610db8565b9261155c565b926116dc6101c2565b806116e681610446565b0390a45f61168c565b611711906116fb6101c2565b91829163a9fbf51f60e01b8352600483016103ac565b0390fd5b5061172a6117248483906113cc565b15610221565b611678565b508261174361173d83610393565b91610393565b1415611672565b508161176661176061175b5f611161565b610393565b91610393565b1415611627565b9190918261178b6117856117805f611161565b610393565b91610393565b146117ff576117af826117aa6117a3600585906113b6565b8690610dc4565b610fd3565b9190916117fa6117e86117e27f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610db8565b93610db8565b936117f16101c2565b91829182610233565b0390a3565b6118218361180b6101c2565b918291630b61174360e31b8352600483016103ac565b0390fd5b61182d611214565b5061183781611882565b908161185361184d6118485f611161565b610393565b91610393565b1461185c575090565b61187e906118686101c2565b918291637e27328960e01b83526004830161048c565b0390fd5b61189961189e91611891611214565b506002611578565b6115a2565b90565b9160206118c29294936118bb60408201965f83019061039f565b019061047f565b565b906118ce90610db8565b5f5260205260405f2090565b906118e49061155c565b5f5260205260405f2090565b6118f8611141565b508161191461190e611909846111a7565b610344565b91610344565b1015611939576119369161192c6119319260066118c4565b6118da565b61119a565b90565b61195a6119446101c2565b92839263295f44f760e21b8452600484016118a1565b0390fd5b5490565b61196a611141565b50611975600861195e565b90565b634e487b7160e01b5f52603260045260245ffd5b5f5260205f2090565b61199e8161195e565b8210156119b8576119b060019161198c565b910201905f90565b611978565b6119cd9060086119d29302610cea565b611183565b90565b906119e091546119bd565b90565b6119eb611141565b5080611a06611a006119fb611962565b610344565b91610344565b1015611a2357611a1a611a20916008611995565b906119d5565b90565b611a2c5f611161565b611a4d611a376101c2565b92839263295f44f760e21b8452600484016118a1565b0390fd5b611a65611a60611a6a9261094f565b610d8d565b610344565b90565b611a7690610d90565b90565b611a8290611a6d565b90565b611a8e90610dac565b90565b60e01b90565b90505190611aa4826101e0565b565b90602082820312611abf57611abc915f01611a97565b90565b6101cc565b5190565b60209181520190565b611af0611af9602093611afe93611ae781611ac4565b93848093611ac8565b95869101610299565b6102bc565b0190565b9092611b3590611b2b611b429694611b2160808601975f87019061039f565b602085019061039f565b604083019061047f565b6060818403910152611ad1565b90565b90611b57611b5283610a9d565b610a88565b918252565b606090565b3d5f14611b7c57611b713d611b45565b903d5f602084013e5b565b611b84611b5c565b90611b7a565b9193843b611ba0611b9a5f611a51565b91610344565b11611bad575b5050505050565b611be55f602094611bf0611bc8611bc38a611a79565b611a85565b9463150b7a02929698611bd96101c2565b998a9889978896611a91565b865260048601611b02565b03925af180915f92611cbc575b50155f14611c7257506001611c1857505b5f80808080611ba6565b611c20611b61565b90611c2a82611ac4565b611c3c611c365f611a51565b91610344565b145f14611c6957611c6590611c4f6101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b50602081519101fd5b611c8b611c85630a85bd0160e11b6101d4565b916101d4565b03611c965750611c0e565b611cb890611ca26101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b611cde91925060203d8111611ce5575b611cd68183610a5f565b810190611aa6565b905f611bfd565b503d611ccc565b611cf4611214565b503390565b90611d1391611d0e611d09610bef565b610eb0565b611ede565b90565b5490565b5f7f4e6f204e46547320696e697469616c697a656400000000000000000000000000910152565b611d4e6013602092610290565b611d5781611d1a565b0190565b611d709060208101905f818303910152611d41565b90565b15611d7a57565b611d826101c2565b62461bcd60e51b815280611d9860048201611d5b565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b611db990610344565b5f198114611dc75760010190565b611d9c565b5f5260205f2090565b611dde81611d16565b821015611df857611df0600191611dcc565b910201905f90565b611978565b90611e0790610db8565b5f5260205260405f2090565b905090565b611e3d611e3492602092611e2b8161028c565b94858093611e13565b93849101610299565b0190565b90565b611e50611e5591610344565b611e41565b9052565b611e69611e709160209493611e18565b8092611e44565b0190565b611e88611e7f6101c2565b92839283611e59565b03902090565b611e9791611e74565b90565b90611ea65f1991610952565b9181191691161790565b90565b90611ec8611ec3611ecf9261155c565b611eb0565b8254611e9a565b9055565b611edb611509565b90565b50611f04611eec600c611d16565b611efe611ef85f611a51565b91610344565b11611d73565b611f0d5f611a51565b5b80611f2a611f24611f1f600c611d16565b610344565b91610344565b1015611fd757611f45611f3f600c8390611dd5565b50611334565b611f6c611f66611f61611f5a60118790611dfd565b8490611e8e565b610df9565b15610221565b611f7f5750611f7a90611db0565b611f0e565b91611fd49150611fcd611f92600f61119a565b611fa5611f9e82611db0565b600f611eb3565b91611fc66001611fc1611fba60118590611dfd565b8890611e8e565b610fd3565b8290611ff8565b82906122e5565b90565b5050611fe1611ed3565b90565b611ff590611ff061122d565b611cf9565b90565b9061200c9190612006611515565b9161200e565b565b909161203a9261201f83829061203c565b612027611cec565b926120315f611161565b90919293611b8a565b565b908161205861205261204d5f611161565b610393565b91610393565b146120c057612071919061206b5f611161565b916123df565b61208b6120856120805f611161565b610393565b91610393565b0361209257565b6120bc61209e5f611161565b6120a66101c2565b9182916339e3563760e11b8352600483016103ac565b0390fd5b6120ea6120cc5f611161565b6120d46101c2565b918291633250574960e11b8352600483016103ac565b0390fd5b906120f89061155c565b5f5260205260405f2090565b601f602091010490565b1b90565b9190600861212d9102916121275f198461210e565b9261210e565b9181191691161790565b919061214d6121486121559361155c565b611eb0565b908354612112565b9055565b61216b91612165611141565b91612137565b565b5b818110612179575050565b806121865f600193612159565b0161216e565b9190601f811161219c575b505050565b6121a86121cd93611270565b9060206121b484612104565b830193106121d5575b6121c690612104565b019061216d565b5f8080612197565b91506121c6819290506121bd565b906121f3905f1990600802610cea565b191690565b81612202916121e3565b906002021790565b906122148161028c565b9067ffffffffffffffff82116122d457612238826122328554611246565b8561218c565b602090601f831160011461226c5791809161225b935f92612260575b50506121f8565b90555b565b90915001515f80612254565b601f1983169161227b85611270565b925f5b8181106122bc575091600293918560019694106122a2575b5050500201905561225e565b6122b2910151601f8416906121e3565b90555f8080612296565b9193602060018192878701518155019501920161227e565b610a4b565b906122e39161220a565b565b906122fb906122f6600a84906120ee565b6122d9565b6123317ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7916123286101c2565b9182918261048c565b0390a1565b606090565b67ffffffffffffffff81116123535760208091020190565b610a4b565b9061236a6123658361233b565b610a88565b918252565b9061237982611d16565b61238281612358565b926123906020850191611dcc565b5f915b8383106123a05750505050565b6001602081926123af85611334565b815201920192019190612393565b6123c69061236f565b90565b6123d1612336565b506123dc600c6123bd565b90565b916123f5926123ec611214565b509190916123f8565b90565b909161241190612406611214565b508290849091612507565b918261242d6124276124225f611161565b610393565b91610393565b145f1461249e5761243d81612896565b5b8161245961245361244e5f611161565b610393565b91610393565b145f1461246e5761246a91506129ba565b5b90565b8261248161247b84610393565b91610393565b0361248e575b505061246b565b612497916127d7565b5f80612487565b826124b16124ab84610393565b91610393565b036124bc575b61243e565b6124c78382906128c9565b6124b7565b90565b6124e36124de6124e8926124cc565b610d8d565b610344565b90565b906124f69103610344565b90565b906125049101610344565b90565b90612510611214565b5061251a81611882565b928061253661253061252b5f611161565b610393565b91610393565b03612675575b508261255861255261254d5f611161565b610393565b91610393565b03612621575b8161257961257361256e5f611161565b610393565b91610393565b036125eb575b6125948261258f60028490611578565b6115fc565b82916125d26125cc6125c67fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95610db8565b92610db8565b9261155c565b926125db6101c2565b806125e581610446565b0390a490565b61261c6125f860016124cf565b6126166126076003869061116d565b916126118361119a565b6124f9565b90611eb3565b61257f565b61263f61262d5f611161565b826126375f611161565b905f9261161c565b61267061264c60016124cf565b61266a61265b6003879061116d565b916126658361119a565b6124eb565b90611eb3565b61255e565b6126829084908391612688565b5f61253c565b61269d61269782848691612712565b15610221565b6126a657505050565b6126c06126ba6126b55f611161565b610393565b91610393565b145f146126ed576126e9826126d36101c2565b918291637e27328960e01b83526004830161048c565b0390fd5b61270e6126f86101c2565b92839263177e802f60e01b8452600484016118a1565b0390fd5b919061271c610d67565b508061273861273261272d5f611161565b610393565b91610393565b14159283612747575b50505090565b809192935061275e61275884610393565b91610393565b149081156127a0575b5091821561277a575b50505f8080612741565b61279891925061278c612792916115af565b92610393565b91610393565b145f80612770565b6127ac915082906113cc565b5f612767565b6127c16127c791939293610344565b92610344565b82039182116127d257565b611d9c565b906128226128279261281a6127fe6127ee836111a7565b6127f860016124cf565b906127b2565b9161281561280e869260066118c4565b84906118da565b611eb3565b9160076118da565b611eb3565b565b90565b5f5260205f2090565b5490565b61284281612835565b82101561285c5761285460019161282c565b910201905f90565b611978565b9081549168010000000000000000831015612891578261288991600161288f95018155612839565b90612137565b565b610a4b565b6128c7906128b86128a7600861195e565b6128b3600984906118da565b611eb3565b6128c26008612829565b612861565b565b61292e612933925f92612929846129246128e2846111a7565b946129026128fa6128f5600784906118da565b61119a565b9560066118c4565b948061291661291089610344565b91610344565b03612935575b5060076118da565b612159565b6118da565b612159565b565b6129719061296c61294f61294a898b906118da565b61119a565b916129648361295f8b84906118da565b611eb3565b9160076118da565b611eb3565b5f61291c565b634e487b7160e01b5f52603160045260245ffd5b61299481612835565b80156129b55760019003906129b26129ac8383612839565b90612159565b55565b612977565b5f612a38612a3d92612a316129e26129d2600861195e565b6129dc60016124cf565b906127b2565b612a2c612a0d612a076129ff6129fa600988906118da565b61119a565b936008611995565b906119d5565b91612a2483612a1e60088490611995565b90612137565b9160096118da565b611eb3565b60096118da565b612159565b612a4f612a4a6008612829565b61298b565b565b612a6390612a5d61122d565b50612aad565b90565b90565b612a7790612a7d9392611e18565b90611e18565b90565b612a9f9291612aab91612a916101c2565b948592602084019283612a69565b90810382520383610a5f565b565b612ab561122d565b50612abf81611825565b50612ad4612acf600a83906120ee565b611334565b612adc612bb9565b612aed612ae882612a66565b611ac4565b612aff612af95f611a51565b91610344565b14612b4757612b15612b1083612a66565b611ac4565b612b27612b215f611a51565b91610344565b11612b3a575050612b3790612b4d565b90565b612b449250612a80565b90565b50905090565b612b5561122d565b50612b5f81611825565b50612b68612bb9565b90612b7a612b7583612a66565b611ac4565b612b8c612b865f611a51565b91610344565b115f14612baa57612ba0612ba69291612c5d565b90612a80565b5b90565b5050612bb4611ed3565b612ba7565b612bc161122d565b50612bca611ed3565b90565b369037565b90612bf7612bdf836114f2565b92602080612bed86936114cf565b9201910390612bcd565b565b6001612c059103610344565b90565b90565b612c1f612c1a612c2492612c08565b610d8d565b610344565b90565b634e487b7160e01b5f52601260045260245ffd5b612c47612c4d91610344565b91610344565b908115612c58570490565b612c27565b612c6561122d565b50612c82612c7282612e7a565b612c7c60016124cf565b906124f9565b90612c8c82612bd2565b91612c95611141565b5060208301015b600115612cff57612caf612cdb91612bf9565b916f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8353612cd5600a612c0b565b90612c3b565b80612cee612ce85f611a51565b91610344565b14612cf95790612c9c565b50505b90565b5050612cfc565b90565b612d1d612d18612d2292612d06565b610d8d565b610344565b90565b90565b612d3c612d37612d4192612d25565b610d8d565b610344565b90565b90565b612d5b612d56612d6092612d44565b610d8d565b610344565b90565b90565b612d7a612d75612d7f92612d63565b610d8d565b610344565b90565b90565b612d99612d94612d9e92612d82565b610d8d565b610344565b90565b90565b612db8612db3612dbd92612da1565b610d8d565b610344565b90565b90565b612dd7612dd2612ddc92612dc0565b610d8d565b610344565b90565b90565b612df6612df1612dfb92612ddf565b610d8d565b610344565b90565b90565b612e15612e10612e1a92612dfe565b610d8d565b610344565b90565b90565b612e34612e2f612e3992612e1d565b610d8d565b610344565b90565b90565b612e53612e4e612e5892612e3c565b610d8d565b610344565b90565b90565b612e72612e6d612e7792612e5b565b610d8d565b610344565b90565b612e82611141565b50612e8c5f611a51565b9080612ebb612eb57a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000612d09565b91610344565b1015613093575b80612ee3612edd6d04ee2d6d415b85acef8100000000612d47565b91610344565b1015613058575b80612f04612efe662386f26fc10000612d85565b91610344565b1015613024575b80612f22612f1c6305f5e100612dc3565b91610344565b1015612ff3575b80612f3e612f38612710612e01565b91610344565b1015612fc4575b80612f59612f536064612e3f565b91610344565b1015612f96575b612f73612f6d600a612c0b565b91610344565b1015612f7d575b90565b612f9190612f8b60016124cf565b906124f9565b612f7a565b612fad612fbe91612fa76064612e3f565b90612c3b565b91612fb86002612e5e565b906124f9565b90612f60565b612fdc612fed91612fd6612710612e01565b90612c3b565b91612fe76004612e20565b906124f9565b90612f45565b61300d61301e916130076305f5e100612dc3565b90612c3b565b916130186008612de2565b906124f9565b90612f29565b6130416130529161303b662386f26fc10000612d85565b90612c3b565b9161304c6010612da4565b906124f9565b90612f0b565b61307c61308d916130766d04ee2d6d415b85acef8100000000612d47565b90612c3b565b916130876020612d66565b906124f9565b90612eea565b6130c46130d5916130be7a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000612d09565b90612c3b565b916130cf6040612d28565b906124f9565b90612ec2565b6130ed906130e7610d67565b506130f0565b90565b6130f8610d67565b508061311361310d637965db0b60e01b6101d4565b916101d4565b14908115613120575b5090565b61312a915061315f565b5f61311c565b90565b61314761314261314c92613130565b611a91565b6101d4565b90565b61315c6349064906613133565b90565b613167610d67565b508061318261317c61317761314f565b6101d4565b916101d4565b1490811561318f575b5090565b613199915061319f565b5f61318b565b6131a7610d67565b50806131c26131bc63780e9d6360e01b6101d4565b916101d4565b149081156131cf575b5090565b6131d991506131df565b5f6131cb565b6131e7610d67565b50806132026131fc6380ac58cd60e01b6101d4565b916101d4565b148015613226575b908115613216575b5090565b6132209150613247565b5f613212565b508061324161323b635b5e139f60e01b6101d4565b916101d4565b1461320a565b61324f610d67565b506132696132636301ffc9a760e01b6101d4565b916101d4565b149056fea264697066735822122045ed1ed9385a12179d6f34f0026c955f5e1da00d13123a804255ac2cd79e96af64736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "424:2657:34:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;424:2657:34;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2196:49:0:-;2241:4;;;:::i;:::-;2196:49;:::o;502:62:34:-;540:24;502:62;:::o;540:24::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;424:2657;;540:24;;;;;;;:::o;:::-;;:::i;:::-;424:2657;;;540:24;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;1029:411::-;1151:37;1029:411;;1070:9;;:::i;:::-;1081:12;;:::i;:::-;1029:411;;:::i;:::-;620:61;;;:::i;:::-;713:131;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;1101:44;1112:18;;:::i;:::-;1132:12;1101:44;;:::i;:::-;;1162:11;;:::i;:::-;1151:37;:::i;:::-;;1200:13;1212:1;1200:13;:::i;:::-;1236:3;1215:1;:19;;1219:15;:8;:15;:::i;:::-;1215:19;:::i;:::-;;;:::i;:::-;;;;;1236:3;1287:7;1321:19;1273:40;1287:7;1301:11;:8;1310:1;1301:11;;:::i;:::-;;1273:40;;:::i;:::-;1321:10;:5;:10;:::i;:::-;:19;:::i;:::-;1236:3;:::i;:::-;1200:13;;1215:19;;1358:13;1370:1;1358:13;:::i;:::-;1391:3;1373:1;:16;;1377:12;:5;:12;:::i;:::-;1373:16;:::i;:::-;;;:::i;:::-;;;;;1391:3;1424:5;1404:25;1424:5;1404:17;:7;1412:8;:5;1418:1;1412:8;;:::i;:::-;;1404:17;;:::i;:::-;:25;:::i;:::-;1391:3;:::i;:::-;1358:13;;1373:16;;1029:411::o;1962:5065:0:-;;;;;:::i;:::-;:::o;487:1613:16:-;;;;;:::i;:::-;:::o;708:6527:15:-;;;;;:::i;:::-;:::o;333:706:17:-;;;;;:::i;:::-;:::o;1380:113:12:-;;1446:13;1469:17;1380:113;1446:13;;:::i;:::-;1469:17;;:::i;:::-;1380:113::o;424:2657:34:-;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;6155:316:0:-;6232:4;;:::i;:::-;6261;6252:23;6253:22;6261:4;6267:7;6253:22;;:::i;:::-;6252:23;;:::i;:::-;6248:217;;;;6291:36;6323:4;6291:29;:20;:12;:6;6298:4;6291:12;;:::i;:::-;:20;6312:7;6291:29;;:::i;:::-;:36;:::i;:::-;6364:7;6373:12;;:::i;:::-;6346:40;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;6407:4;6400:11;:::o;6248:217::-;6449:5;;;6442:12;:::o;424:2657:34:-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2830:136:0:-;2930:29;2830:136;2930:20;:12;:29;2830:136;2907:4;;:::i;:::-;2930:6;;:12;:::i;:::-;:20;:29;:::i;:::-;;:::i;:::-;2923:36;:::o;424:2657:34:-;;;:::o;656:96:20:-;709:7;;:::i;:::-;735:10;;728:17;:::o",
  "deployedSourceMap": "424:2657:34:-:0;;;;;;;;;-1:-1:-1;424:2657:34;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;2196:49:0:-;2241:4;;;:::i;:::-;2196:49;:::o;:::-;;;:::i;:::-;;:::o;424:2657:34:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;502:62::-;540:24;502:62;:::o;:::-;;;:::i;:::-;;:::o;424:2657::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;994:30::-;;;;;;:::i;:::-;;:::o;424:2657::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;2830:136:0:-;2930:29;2830:136;2930:20;:12;:29;2830:136;2907:4;;:::i;:::-;2930:6;;:12;:::i;:::-;:20;:29;:::i;:::-;;:::i;:::-;2923:36;:::o;424:2657:34:-;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;3786:120:0:-;3877:22;:12;:22;3786:120;3851:7;;:::i;:::-;3877:6;;:12;:::i;:::-;:22;;:::i;:::-;3870:29;:::o;2431:76::-;;2499:1;2431:76;2484:4;4276:18;4289:4;4276:18;:::i;:::-;2484:4;:::i;:::-;2499:1;:::i;:::-;2431:76::o;4202:136::-;;4306:25;4202:136;4306:25;:::i;:::-;;4202:136::o;:::-;;;;;:::i;:::-;:::o;3175:103::-;3258:12;3175:103;3258:12;;:::i;:::-;;;:::i;:::-;3175:103::o;424:2657:34:-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;3408:197:0:-;;3495:23;3496:22;3504:4;3510:7;3496:22;;:::i;:::-;3495:23;;:::i;:::-;3491:108;;3408:197;;:::o;3491:108::-;3541:47;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;2431:76;;2499:1;2431:76;2484:4;4693:18;4706:4;4693:18;:::i;:::-;2484:4;:::i;:::-;2499:1;:::i;:::-;2431:76::o;4618:138::-;;4723:26;4618:138;4723:26;:::i;:::-;;4618:138::o;:::-;;;;;:::i;:::-;:::o;5304:245::-;;5397:18;:34;;5419:12;;:::i;:::-;5397:34;:::i;:::-;;;:::i;:::-;;5393:102;;5505:37;5517:4;5505:37;:::i;:::-;;5304:245::o;5393:102::-;5454:30;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;424:2657:34;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;6155:316:0:-;6232:4;;:::i;:::-;6261;6252:23;6253:22;6261:4;6267:7;6253:22;;:::i;:::-;6252:23;;:::i;:::-;6248:217;;;;6291:36;6323:4;6291:29;:20;:12;:6;6298:4;6291:12;;:::i;:::-;:20;6312:7;6291:29;;:::i;:::-;:36;:::i;:::-;6364:7;6373:12;;:::i;:::-;6346:40;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;6407:4;6400:11;:::o;6248:217::-;6449:5;;;6442:12;:::o;6708:317::-;6786:4;;:::i;:::-;6814;6806:22;6814:4;6820:7;6806:22;;:::i;:::-;6802:217;;;;6844:37;6876:5;6844:29;:20;:12;:6;6851:4;6844:12;;:::i;:::-;:20;6865:7;6844:29;;:::i;:::-;:37;:::i;:::-;6918:7;6927:12;;:::i;:::-;6900:40;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;6961:4;6954:11;:::o;6802:217::-;7003:5;;;6996:12;:::o;424:2657:34:-;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;1861:208:12:-;1924:7;;:::i;:::-;1947:5;;:19;;1956:10;1964:1;1956:10;:::i;:::-;1947:19;:::i;:::-;;;:::i;:::-;;1943:87;;2046:16;;:9;;:16;:::i;:::-;;:::i;:::-;2039:23;:::o;1943:87::-;1989:30;2008:10;2016:1;2008:10;:::i;:::-;1989:30;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;424:2657:34;;;:::o;2103:118:12:-;2192:22;2103:118;2166:7;;:::i;:::-;2206;2192:22;:::i;:::-;2185:29;:::o;424:2657:34:-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;2263:89:12:-;2308:13;;:::i;:::-;2340:5;2333:12;2340:5;2333:12;:::i;:::-;;:::o;2394:93::-;2441:13;;:::i;:::-;2473:7;2466:14;2473:7;2466:14;:::i;:::-;;:::o;3152:113::-;;3245:12;3152:113;3236:7;3245:12;;:::i;:::-;;;:::i;:::-;3152:113::o;3299:154::-;3425:21;3299:154;3366:7;;:::i;:::-;3399;3385:22;3399:7;3385:22;:::i;:::-;;3425:21;:::i;:::-;3418:28;:::o;3487:144::-;3615:8;3487:144;3591:12;;:::i;:::-;3605:8;3615;;;:::i;:::-;3487:144::o;424:2657:34:-;;;;;:::i;:::-;;;;;;;;;:::o;3665:153:12:-;3776:35;3665:153;3776:25;:35;3665:153;3753:4;;:::i;:::-;3776:18;;:25;:::i;:::-;:35;:::i;:::-;;:::i;:::-;3769:42;:::o;424:2657:34:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;3852:578:12:-;;;3946:2;:16;;3952:10;3960:1;3952:10;:::i;:::-;3946:16;:::i;:::-;;;:::i;:::-;;3942:87;;4271:34;4279:2;4283:7;4292:12;;:::i;:::-;4271:34;;:::i;:::-;4319:13;;:21;;4336:4;4319:21;:::i;:::-;;;:::i;:::-;;4315:109;;3852:578;;;:::o;4315:109::-;4363:50;4384:4;4390:7;4399:13;4363:50;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;3942:87;3985:33;4007:10;4015:1;4007:10;:::i;:::-;3985:33;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;424:2657:34;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;:::i;:::-;;:::o;4464:132:12:-;;4550:39;4464:132;4573:2;4550:39;;:::i;:::-;;;:::i;:::-;4464:132::o;4630:233::-;;4851:4;4630:233;;4766:7;4756:4;4762:2;4766:7;;;:::i;:::-;4818:12;;:::i;:::-;4832:4;4838:2;4842:7;4851:4;;;:::i;:::-;4630:233::o;424:2657:34:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;5609:127:12:-;5705:24;;5609:127;5679:7;;:::i;:::-;5705:15;;:24;:::i;:::-;;:::i;:::-;5698:31;:::o;14138:120::-;;14246:4;14138:120;14231:7;14246:4;;;:::i;:::-;14138:120::o;424:2657:34:-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;14440:662:12:-;;;;14600:9;:31;;;;14440:662;14596:460;;14440:662;15093:2;;;15066:24;:29;15093:2;15066:15;;:24;:::i;:::-;:29;:::i;:::-;14440:662::o;14596:460::-;14663:22;14677:7;14663:22;:::i;:::-;14813:4;;:18;;14821:10;14829:1;14821:10;:::i;:::-;14813:18;:::i;:::-;;;:::i;:::-;;;:35;;;14596:460;14813:69;;;14596:460;14809:142;;14969:9;;15066:24;14969:9;15066:29;14969:9;;14965:81;;14596:460;;;;;;14965:81;15019:2;15023:7;15003:28;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;14965:81;;;14809:142;14909:27;14931:4;14909:27;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;14813:69;14870:5;14852:30;14853:29;14870:5;14877:4;14853:29;;:::i;:::-;14852:30;;:::i;:::-;14813:69;;:35;14835:5;;:13;;14844:4;14835:13;:::i;:::-;;;:::i;:::-;;;14813:35;;14600:31;14613:4;;:18;;14621:10;14629:1;14621:10;:::i;:::-;14613:18;:::i;:::-;;;:::i;:::-;;;14600:31;;15311:312;;;;15418:8;:22;;15430:10;15438:1;15430:10;:::i;:::-;15418:22;:::i;:::-;;;:::i;:::-;;15414:91;;15514:46;15552:8;15514:35;:25;:18;15533:5;15514:25;;:::i;:::-;15540:8;15514:35;;:::i;:::-;:46;:::i;:::-;15597:8;15607;15575:41;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;15311:312::o;15414:91::-;15463:31;15485:8;15463:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;15858:241;15921:7;;:::i;:::-;15965;15956:17;15965:7;15956:17;:::i;:::-;15987:5;;:19;;15996:10;16004:1;15996:10;:::i;:::-;15987:19;:::i;:::-;;;:::i;:::-;;15983:88;;16087:5;16080:12;:::o;15983:88::-;16029:31;16052:7;16029:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;5378:115;5470:16;;5378:115;5444:7;;:::i;:::-;5470;;:16;:::i;:::-;;:::i;:::-;5463:23;:::o;424:2657:34:-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;1668:255:15:-;1756:7;;:::i;:::-;1779:5;;:25;;1788:16;1798:5;1788:16;:::i;:::-;1779:25;:::i;:::-;;;:::i;:::-;;;1775:99;;1890:26;:12;:19;:26;:12;;:19;:::i;:::-;:26;:::i;:::-;;:::i;:::-;1883:33;:::o;1775:99::-;1827:36;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;424:2657:34;;;:::o;1967:102:15:-;2019:7;;:::i;:::-;2045:10;:17;:10;:17;:::i;:::-;2038:24;:::o;424:2657:34:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;2113:226:15:-;2179:7;;:::i;:::-;2202:5;;:22;;2211:13;;:::i;:::-;2202:22;:::i;:::-;;;:::i;:::-;;;2198:101;;2315:17;;:10;;:17;:::i;:::-;;;:::i;:::-;2308:24;:::o;2198:101::-;2270:10;2278:1;2270:10;:::i;:::-;2247:41;;;:::i;:::-;1827:36;;;;;;2247:41;;;;;;:::i;:::-;;;;424:2657:34;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;993:926:19;;;1173:2;:14;:18;;1190:1;1173:18;:::i;:::-;;;:::i;:::-;;1169:744;;993:926;;;;;;:::o;1169:744::-;1211:67;;;1227:2;1211:67;:36;:19;1227:2;1211:19;:::i;:::-;:36;:::i;:::-;;;1248:8;1258:4;1264:7;1211:67;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;1169:744;1207:696;;;;;;;;;;;;1169:744;;;;;;;1207:696;1518:385;;:::i;:::-;1568:6;:13;:6;:13;:::i;:::-;:18;;1585:1;1568:18;:::i;:::-;;;:::i;:::-;;1564:325;;;;1672:39;1708:2;1672:39;;:::i;:::-;3985:33:12;;;;;;1672:39:19;;;;;;:::i;:::-;;;;1564:325;1758:113;;;;;;;1207:696;1325:51;;1335:41;;;1325:51;:::i;:::-;;;:::i;:::-;;1321:182;;1207:696;;;1321:182;1445:39;1481:2;1445:39;;:::i;:::-;3985:33:12;;;;;;1445:39:19;;;;;;:::i;:::-;;;;1211:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;656:96:20;709:7;;:::i;:::-;735:10;;728:17;:::o;2431:76:0:-;;2499:1;2431:76;2484:4;1490:11:34;;:::i;:::-;2484:4:0;:::i;:::-;2499:1;:::i;:::-;2431:76;:::o;424:2657:34:-;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::i;:::-;;:::o;1444:750::-;1541:5;1533:48;1541:12;:5;:12;:::i;:::-;:16;;1556:1;1541:16;:::i;:::-;;;:::i;:::-;;1533:48;:::i;:::-;1593:13;1605:1;1593:13;:::i;:::-;1626:3;1608:1;:16;;1612:12;:5;:12;:::i;:::-;1608:16;:::i;:::-;;;:::i;:::-;;;;;1639:35;1666:8;:5;1672:1;1666:8;;:::i;:::-;;1639:35;:::i;:::-;1687:28;1688:27;;:15;:11;1700:2;1688:15;;:::i;:::-;1704:10;1688:27;;:::i;:::-;;:::i;:::-;1687:28;;:::i;:::-;1683:236;;1626:3;;;;:::i;:::-;1593:13;;1683:236;1745:17;1871:10;1745:17;;1831:7;1745:17;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;1802:4;1772:34;1802:4;1772:27;:15;:11;1784:2;1772:15;;:::i;:::-;1788:10;1772:27;;:::i;:::-;:34;:::i;:::-;1831:7;;;:::i;:::-;1871:10;;;:::i;:::-;1893:17;:::o;1608:16::-;;;2180:9;;:::i;:::-;;:::o;1444:750::-;1512:13;1444:750;1512:13;;:::i;:::-;;:::i;:::-;1444:750;:::o;10302:100:12:-;;10369:26;10302:100;10383:7;10369:26;;:::i;:::-;;;:::i;:::-;10302:100::o;10623:207::-;;;10818:4;10623:207;10727:7;10723:2;10727:7;;;:::i;:::-;10779:12;;:::i;:::-;10801:1;10793:10;10801:1;10793:10;:::i;:::-;10805:2;10809:7;10818:4;;;:::i;:::-;10623:207::o;9624:327::-;;9691:2;:16;;9697:10;9705:1;9697:10;:::i;:::-;9691:16;:::i;:::-;;;:::i;:::-;;9687:87;;9807:32;9815:2;9819:7;9828:10;9836:1;9828:10;:::i;:::-;9807:32;;:::i;:::-;9853:27;;9870:10;9878:1;9870:10;:::i;:::-;9853:27;:::i;:::-;;;:::i;:::-;;9849:96;;9624:327::o;9849:96::-;9903:31;9923:10;9931:1;9923:10;:::i;:::-;9903:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;9687:87;9730:33;9752:10;9760:1;9752:10;:::i;:::-;9730:33;;:::i;:::-;3985;;;;;;9730;;;;;;:::i;:::-;;;;424:2657:34;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;1931:167:16:-;;2022:31;1931:167;2022:19;:10;2033:7;2022:19;;:::i;:::-;:31;:::i;:::-;2068:23;;;;;:::i;:::-;;;;;;:::i;:::-;;;;1931:167::o;424:2657:34:-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::o;2198:89::-;2247:15;;:::i;:::-;2277:5;2270:12;2277:5;2270:12;:::i;:::-;;:::o;2357:188::-;;2508:32;2357:188;2486:7;;:::i;:::-;2522:2;2526:7;2535:4;2508:32;;:::i;:::-;2501:39;:::o;2372:625:15:-;;;2510:32;2372:625;2467:7;;:::i;:::-;2524:2;;2528:7;;2537:4;2510:32;;:::i;:::-;2557:13;;:27;;2574:10;2582:1;2574:10;:::i;:::-;2557:27;:::i;:::-;;;:::i;:::-;;2553:210;;;;2632:7;;;:::i;:::-;2553:210;2776:2;:16;;2782:10;2790:1;2782:10;:::i;:::-;2776:16;:::i;:::-;;;:::i;:::-;;2772:188;;;;2845:7;;;;:::i;:::-;2772:188;2970:20;:::o;2772:188::-;2874:13;:19;;2891:2;2874:19;:::i;:::-;;;:::i;:::-;;2870:90;;2772:188;;;;;2870:90;2941:7;2937:2;2941:7;:::i;:::-;2870:90;;;;2553:210;2661:13;:19;;2678:2;2661:19;:::i;:::-;;;:::i;:::-;;2657:106;;2553:210;;;2657:106;2744:7;2729:13;2744:7;;;:::i;:::-;2657:106;;424:2657:34;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::o;8507:795:12:-;;8593:7;;:::i;:::-;8636;8627:17;8636:7;8627:17;:::i;:::-;8704:4;;:18;;8712:10;8720:1;8712:10;:::i;:::-;8704:18;:::i;:::-;;;:::i;:::-;;8700:86;;8507:795;8830:4;;:18;;8838:10;8846:1;8838:10;:::i;:::-;8830:18;:::i;:::-;;;:::i;:::-;;8826:256;;8507:795;9096:2;:16;;9102:10;9110:1;9102:10;:::i;:::-;9096:16;:::i;:::-;;;:::i;:::-;;9092:107;;8507:795;9209:21;9228:2;9209:16;:7;9217;9209:16;;:::i;:::-;:21;:::i;:::-;9255:4;9261:2;9246:27;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;9284:11;:::o;9092:107::-;9156:18;;9173:1;9156:18;:::i;:::-;;:13;:9;9166:2;9156:13;;:::i;:::-;:18;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;9092:107;;8826:256;8988:5;8955:10;8963:1;8955:10;:::i;:::-;8967:7;8976:10;8984:1;8976:10;:::i;:::-;8988:5;;;;:::i;:::-;9037:20;;9056:1;9037:20;:::i;:::-;;:15;:9;9047:4;9037:15;;:::i;:::-;:20;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;8826:256;;8700:86;8767:7;8755:4;;8761;8767:7;;;:::i;:::-;8700:86;;;6751:368;6862:39;6863:38;6877:5;6884:7;6893;6863:38;;:::i;:::-;6862:39;;:::i;:::-;6858:255;;6751:368;;;:::o;6858:255::-;6921:19;;6930:10;6938:1;6930:10;:::i;:::-;6921:19;:::i;:::-;;;:::i;:::-;;6917:186;;;;6967:31;6990:7;6967:31;;:::i;:::-;16029;;;;;;6967;;;;;;:::i;:::-;;;;6917:186;7044:44;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;6047:272;;;6150:4;;:::i;:::-;6185:7;;:21;;6196:10;6204:1;6196:10;:::i;:::-;6185:21;:::i;:::-;;;:::i;:::-;;;:127;;;;6047:272;6166:146;;;;:::o;6185:127::-;6223:5;;;;;:16;;6232:7;6223:16;:::i;:::-;;;:::i;:::-;;:52;;;;;6185:127;6223:88;;;;;;6185:127;6222:90;;6185:127;;;;;6223:88;6279:32;6292:7;;;6279:21;:32;6292:7;6279:21;:::i;:::-;6304:7;6279:32;:::i;:::-;;;:::i;:::-;;6223:88;;;;:52;6243:32;6260:5;;6267:7;6243:32;;:::i;:::-;6223:52;;;424:2657:34;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;3291:214:15:-;;3463:26;:35;3291:214;3419:34;3392:17;:13;3402:2;3392:13;:::i;:::-;:17;3408:1;3392:17;:::i;:::-;;;:::i;:::-;3446:7;3419:24;:16;3446:7;3419:12;;:16;:::i;:::-;3436:6;3419:24;;:::i;:::-;:34;:::i;:::-;3463:17;;:26;:::i;:::-;:35;:::i;:::-;3291:214::o;424:2657:34:-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;3700:161:15:-;3830:24;3700:161;3776:44;3803:17;:10;:17;:::i;:::-;3776:24;:15;3792:7;3776:24;;:::i;:::-;:44;:::i;:::-;3830:15;:10;:15;:::i;:::-;:24;:::i;:::-;3700:161::o;4478:1055::-;5491:35;5484:42;4478:1055;5484:42;4478:1055;5441:33;4775:4;5448:26;4765:15;4775:4;4765:15;:::i;:::-;4811:17;4912:18;4811:26;;:17;4829:7;4811:26;;:::i;:::-;;:::i;:::-;4912:12;;:18;:::i;:::-;5034:10;;:28;;5048:14;5034:28;:::i;:::-;;;:::i;:::-;;5030:325;;4478:1055;5448:17;;:26;:::i;:::-;5441:33;:::i;:::-;5491:35;:::i;:::-;5484:42;:::i;:::-;4478:1055::o;5030:325::-;5267:43;5100:19;5267:30;5100:35;;:19;5120:14;5100:35;;:::i;:::-;;:::i;:::-;5184:11;5150:45;5184:11;5150:31;:19;5170:10;5150:31;;:::i;:::-;:45;:::i;:::-;5267:17;;:30;:::i;:::-;:43;:::i;:::-;5030:325;;;424:2657:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;:::i;5821:1061:15:-;6818:31;6825:24;6818:31;5821:1061;6656:41;6095:21;:17;:10;:17;:::i;:::-;:21;6115:1;6095:21;:::i;:::-;;;:::i;:::-;6656:28;6515:26;;6147:24;;:15;6163:7;6147:24;;:::i;:::-;;:::i;:::-;6515:10;;:26;:::i;:::-;;;:::i;:::-;6577:11;6552:36;6577:11;6552:22;:10;6563;6552:22;;:::i;:::-;:36;;:::i;:::-;6656:15;;:28;:::i;:::-;:41;:::i;:::-;6825:15;:24;:::i;:::-;6818:31;:::i;:::-;6859:14;;:10;:14;:::i;:::-;;:::i;:::-;5821:1061::o;2716:155:34:-;2843:23;2716:155;2815:13;;:::i;:::-;2858:7;2843:23;:::i;:::-;2836:30;:::o;424:2657::-;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;:::o;1210:593:16:-;1283:13;;:::i;:::-;1322:7;1308:22;1322:7;1308:22;:::i;:::-;;1341:45;1367:19;:10;1378:7;1367:19;;:::i;:::-;1341:45;:::i;:::-;1417:10;;:::i;:::-;1500:18;:11;1506:4;1500:11;:::i;:::-;:18;:::i;:::-;:23;;1522:1;1500:23;:::i;:::-;;;:::i;:::-;;1496:70;;1665:23;:16;1671:9;1665:16;:::i;:::-;:23;:::i;:::-;:27;;1691:1;1665:27;:::i;:::-;;;:::i;:::-;;1661:95;;1788:7;;1773:23;1788:7;1773:23;:::i;:::-;1766:30;:::o;1661:95::-;1715:30;1729:4;;1715:30;:::i;:::-;1708:37;:::o;1496:70::-;1546:9;;;1539:16;:::o;2529:255:12:-;2593:13;;:::i;:::-;2632:7;2618:22;2632:7;2618:22;:::i;:::-;;2675:10;;:::i;:::-;2708:7;2702:21;:14;2708:7;2702:14;:::i;:::-;:21;:::i;:::-;:25;;2726:1;2702:25;:::i;:::-;;;:::i;:::-;;:75;;;;2753:18;2730:42;2744:7;2753;:18;:::i;:::-;2730:42;;:::i;:::-;2702:75;2695:82;:::o;2702:75::-;;;;;:::i;:::-;;;3026:92;3077:13;;:::i;:::-;3102:9;;;:::i;:::-;;:::o;424:2657:34:-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;1308:634:25:-;1364:13;;:::i;:::-;1441:5;1430:21;:17;1441:5;1430:17;:::i;:::-;:21;1450:1;1430:21;:::i;:::-;;;:::i;:::-;1499:6;1488:18;1499:6;1488:18;:::i;:::-;1520:11;;;:::i;:::-;1545:94;;;;;1652:247;1659:4;;;;1683:5;1834:11;1683:5;;:::i;:::-;1706:111;;;;;;;;;;1834:11;1843:2;1834:11;:::i;:::-;;;:::i;:::-;1867:5;:10;;1876:1;1867:10;:::i;:::-;;;:::i;:::-;;1863:21;;1652:247;;;1863:21;1879:5;;1652:247;1912:13;:::o;1659:4::-;;;;;424:2657:34;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;29154:916:31:-;29207:7;;:::i;:::-;29243:1;29226:18;29243:1;29226:18;:::i;:::-;29282:5;;:17;;29291:8;29282:17;:::i;:::-;;;:::i;:::-;;;29278:103;;29154:916;29398:5;:17;;29407:8;29398:17;:::i;:::-;;;:::i;:::-;;;29394:103;;29154:916;29514:5;:17;;29523:8;29514:17;:::i;:::-;;;:::i;:::-;;;29510:103;;29154:916;29630:5;:16;;29639:7;29630:16;:::i;:::-;;;:::i;:::-;;;29626:100;;29154:916;29743:5;:16;;29752:7;29743:16;:::i;:::-;;;:::i;:::-;;;29739:100;;29154:916;29856:5;:16;;29865:7;29856:16;:::i;:::-;;;:::i;:::-;;;29852:100;;29154:916;29969:16;;29978:7;29969:16;:::i;:::-;;;:::i;:::-;;;29965:66;;29154:916;30050:13;:::o;29965:66::-;30005:11;30015:1;30005:11;30015:1;30005:11;:::i;:::-;;;:::i;:::-;29965:66;;29852:100;29892:16;29926:11;29901:7;29892:16;29901:7;29892:16;:::i;:::-;;;:::i;:::-;29936:1;29926:11;29936:1;29926:11;:::i;:::-;;;:::i;:::-;29852:100;;;29739;29779:16;29813:11;29788:7;29779:16;29788:7;29779:16;:::i;:::-;;;:::i;:::-;29823:1;29813:11;29823:1;29813:11;:::i;:::-;;;:::i;:::-;29739:100;;;29626;29666:16;29700:11;29675:7;29666:16;29675:7;29666:16;:::i;:::-;;;:::i;:::-;29710:1;29700:11;29710:1;29700:11;:::i;:::-;;;:::i;:::-;29626:100;;;29510:103;29551:17;29586:12;29560:8;29551:17;29560:8;29551:17;:::i;:::-;;;:::i;:::-;29596:2;29586:12;29596:2;29586:12;:::i;:::-;;;:::i;:::-;29510:103;;;29394;29435:17;29470:12;29444:8;29435:17;29444:8;29435:17;:::i;:::-;;;:::i;:::-;29480:2;29470:12;29480:2;29470:12;:::i;:::-;;;:::i;:::-;29394:103;;;29278;29319:17;29354:12;29328:8;29319:17;29328:8;29319:17;:::i;:::-;;;:::i;:::-;29364:2;29354:12;29364:2;29354:12;:::i;:::-;;;:::i;:::-;29278:103;;;2875:204:34;3038:36;2875:204;3019:4;;:::i;:::-;3062:11;3038:36;:::i;:::-;3031:43;:::o;2541:202:0:-;2626:4;;:::i;:::-;2649:11;;:47;;2664:32;;;2649:47;:::i;:::-;;;:::i;:::-;;:87;;;;;2541:202;2642:94;;:::o;2649:87::-;2700:36;2724:11;;2700:36;:::i;:::-;2649:87;;;424:2657:34;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;762:65:16:-;809:18;816:10;809:18;:::i;:::-;762:65;:::o;961:207::-;1063:4;;:::i;:::-;1086:11;;:35;;1101:20;;:::i;:::-;1086:35;:::i;:::-;;;:::i;:::-;;:75;;;;;961:207;1079:82;;:::o;1086:75::-;1125:36;1149:11;;1125:36;:::i;:::-;1086:75;;;1402:222:15;1504:4;;:::i;:::-;1527:11;;:50;;1542:35;;;1527:50;:::i;:::-;;;:::i;:::-;;:90;;;;;1402:222;1520:97;;:::o;1527:90::-;1581:36;1605:11;;1581:36;:::i;:::-;1527:90;;;:300:12;1629:4;;:::i;:::-;1664:11;;:40;;1679:25;;;1664:40;:::i;:::-;;;:::i;:::-;;:104;;;;1527:300;1664:156;;;;;1527:300;1645:175;;:::o;1664:156::-;1784:36;1808:11;;1784:36;:::i;:::-;1664:156;;;:104;1720:11;;:48;;1735:33;;;1720:48;:::i;:::-;;;:::i;:::-;;1664:104;;730:146:29;806:4;;:::i;:::-;829:11;:40;;844:25;;;829:40;:::i;:::-;;;:::i;:::-;;822:47;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { ERC721 } from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport { ERC721URIStorage } from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport { ERC721Enumerable } from \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport { AccessControl } from \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract NFT is ERC721, ERC721Enumerable, ERC721URIStorage, AccessControl {\n  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n  string[] private _NFTs;\n  string private baseCID = \"bafybeigwj6oft4eg5xgba5jfa762qffbj7khmg3icgfxw4tsq6vsorpksa\";\n  string[] private nftFiles = [\n    \"ada.png\",\n    \"dymka.png\",\n    \"israeli.png\",\n    \"krasotaYrodstvo.png\",\n    \"mbm.png\",\n    \"mouse.png\",\n    \"rodeo.png\"\n  ];\n  uint256 private _tokenIdCounter;\n  mapping(string => bool) private _minted;\n  mapping(address => mapping(string => bool)) private _userMinted;\n\n  address public stakingContract;\n\n  constructor(address initialOwner) ERC721(\"Diamond\", \"DiamondNFT\") {\n    _grantRole(DEFAULT_ADMIN_ROLE, initialOwner);\n    _grantRole(MINTER_ROLE, initialOwner);\n\n    for (uint256 i = 0; i < nftFiles.length; i++) {\n      string memory fullURI = string.concat(baseCID, \"/\", nftFiles[i]);\n      _NFTs.push(fullURI);\n    }\n\n    for (uint256 i = 0; i < _NFTs.length; i++) {\n      _minted[_NFTs[i]] = false;\n    }\n  }\n\n  function safeMint(address to) public onlyRole(MINTER_ROLE) returns (string memory) {\n    require(_NFTs.length > 0, \"No NFTs initialized\");\n\n    for (uint256 i = 0; i < _NFTs.length; i++) {\n      string memory currentNFT = _NFTs[i];\n\n      if (!_userMinted[to][currentNFT]) {\n        uint256 tokenId = _tokenIdCounter++;\n        _userMinted[to][currentNFT] = true;\n\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, currentNFT);\n\n        return currentNFT;\n      }\n\n      // if (!_minted[currentNFT]) {\n      //   uint256 tokenId = _tokenIdCounter++;\n      //   _minted[currentNFT] = true;\n\n      //   _safeMint(to, tokenId);\n      //   _setTokenURI(tokenId, currentNFT);\n\n      //   return currentNFT;\n      // }\n    }\n\n    return \"\";\n  }\n\n  function getAvailableNFTs() public view returns (string[] memory) {\n    return _NFTs;\n  }\n\n  // The following functions are overrides required by Solidity.\n\n  function _update(\n    address to,\n    uint256 tokenId,\n    address auth\n  ) internal override(ERC721, ERC721Enumerable) returns (address) {\n    return super._update(to, tokenId, auth);\n  }\n\n  function _increaseBalance(\n    address account,\n    uint128 value\n  ) internal override(ERC721, ERC721Enumerable) {\n    super._increaseBalance(account, value);\n  }\n\n  function tokenURI(\n    uint256 tokenId\n  ) public view override(ERC721, ERC721URIStorage) returns (string memory) {\n    return super.tokenURI(tokenId);\n  }\n\n  function supportsInterface(\n    bytes4 interfaceId\n  ) public view override(ERC721, ERC721Enumerable, ERC721URIStorage, AccessControl) returns (bool) {\n    return super.supportsInterface(interfaceId);\n  }\n}\n",
  "sourcePath": "/Users/diamondniam/Laboratory/Development/Test/DiamondNiamToken/contracts/NFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/NFT.sol",
    "exportedSymbols": {
      "AccessControl": [
        296
      ],
      "ERC721": [
        2339
      ],
      "ERC721Enumerable": [
        2860
      ],
      "ERC721URIStorage": [
        2988
      ],
      "NFT": [
        9528
      ]
    },
    "id": 9529,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9247,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:34"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 9249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9529,
        "sourceUnit": 2340,
        "src": "57:73:34",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9248,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2339,
              "src": "66:6:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 9251,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9529,
        "sourceUnit": 2989,
        "src": "131:104:34",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9250,
              "name": "ERC721URIStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2988,
              "src": "140:16:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "id": 9253,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9529,
        "sourceUnit": 2861,
        "src": "236:104:34",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9252,
              "name": "ERC721Enumerable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2860,
              "src": "245:16:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 9255,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9529,
        "sourceUnit": 297,
        "src": "341:81:34",
        "symbolAliases": [
          {
            "foreign": {
              "id": 9254,
              "name": "AccessControl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 296,
              "src": "350:13:34",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9256,
              "name": "ERC721",
              "nameLocations": [
                "440:6:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2339,
              "src": "440:6:34"
            },
            "id": 9257,
            "nodeType": "InheritanceSpecifier",
            "src": "440:6:34"
          },
          {
            "baseName": {
              "id": 9258,
              "name": "ERC721Enumerable",
              "nameLocations": [
                "448:16:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2860,
              "src": "448:16:34"
            },
            "id": 9259,
            "nodeType": "InheritanceSpecifier",
            "src": "448:16:34"
          },
          {
            "baseName": {
              "id": 9260,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "466:16:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2988,
              "src": "466:16:34"
            },
            "id": 9261,
            "nodeType": "InheritanceSpecifier",
            "src": "466:16:34"
          },
          {
            "baseName": {
              "id": 9262,
              "name": "AccessControl",
              "nameLocations": [
                "484:13:34"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 296,
              "src": "484:13:34"
            },
            "id": 9263,
            "nodeType": "InheritanceSpecifier",
            "src": "484:13:34"
          }
        ],
        "canonicalName": "NFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9528,
        "linearizedBaseContracts": [
          9528,
          296,
          2988,
          2860,
          3020,
          2339,
          526,
          3048,
          407,
          2456,
          5703,
          5715,
          379,
          3155
        ],
        "name": "NFT",
        "nameLocation": "433:3:34",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 9268,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "526:11:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "502:62:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 9264,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "502:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 9266,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "550:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 9265,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "540:9:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9267,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "540:24:34",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 9271,
            "mutability": "mutable",
            "name": "_NFTs",
            "nameLocation": "586:5:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "569:22:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 9269,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "569:6:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 9270,
              "nodeType": "ArrayTypeName",
              "src": "569:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9274,
            "mutability": "mutable",
            "name": "baseCID",
            "nameLocation": "610:7:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "595:86:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 9272,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "595:6:34",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "6261667962656967776a366f66743465673578676261356a6661373632716666626a376b686d6733696367667877347473713676736f72706b7361",
              "id": 9273,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "620:61:34",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5fb5bece53cb20c09e59bcb72d57531593cb762454f60fa8040da35cc17893b3",
                "typeString": "literal_string \"bafybeigwj6oft4eg5xgba5jfa762qffbj7khmg3icgfxw4tsq6vsorpksa\""
              },
              "value": "bafybeigwj6oft4eg5xgba5jfa762qffbj7khmg3icgfxw4tsq6vsorpksa"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9285,
            "mutability": "mutable",
            "name": "nftFiles",
            "nameLocation": "702:8:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "685:159:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 9275,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "685:6:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 9276,
              "nodeType": "ArrayTypeName",
              "src": "685:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "6164612e706e67",
                  "id": 9277,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "719:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_2b4c2aa98c422a7b8c599bef16479fd3c7d1cc9ca1a1d1bef9a335bc1395a9bb",
                    "typeString": "literal_string \"ada.png\""
                  },
                  "value": "ada.png"
                },
                {
                  "hexValue": "64796d6b612e706e67",
                  "id": 9278,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "734:11:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_1938c5c6dd87c80ce263ba0c5a7752d85aa7076718ea3c60e09464e593546bbe",
                    "typeString": "literal_string \"dymka.png\""
                  },
                  "value": "dymka.png"
                },
                {
                  "hexValue": "69737261656c692e706e67",
                  "id": 9279,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "751:13:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_da54ebc9bf1340665e694caa9df6deac14db608f82d8c5a42bee2a0de0f18c52",
                    "typeString": "literal_string \"israeli.png\""
                  },
                  "value": "israeli.png"
                },
                {
                  "hexValue": "6b7261736f746159726f647374766f2e706e67",
                  "id": 9280,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "770:21:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dd3f8f86e5c4d835e874f42e2e800a9492a10cf2a18da5990c81e5b51e04f151",
                    "typeString": "literal_string \"krasotaYrodstvo.png\""
                  },
                  "value": "krasotaYrodstvo.png"
                },
                {
                  "hexValue": "6d626d2e706e67",
                  "id": 9281,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "797:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_31d2903e9920ac0ca09eabe5fa4193110ce9f42a254aeb5d02d116766bc05e20",
                    "typeString": "literal_string \"mbm.png\""
                  },
                  "value": "mbm.png"
                },
                {
                  "hexValue": "6d6f7573652e706e67",
                  "id": 9282,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "812:11:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_0ef2fed04b7e89b9e360a6dbd17e1facf10861759d1828b7607e05de201dc6dc",
                    "typeString": "literal_string \"mouse.png\""
                  },
                  "value": "mouse.png"
                },
                {
                  "hexValue": "726f64656f2e706e67",
                  "id": 9283,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "829:11:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_21276dca7a15fe87868fcbddb19ce21257c4c5ac363eefe67efb3d552ea9a330",
                    "typeString": "literal_string \"rodeo.png\""
                  },
                  "value": "rodeo.png"
                }
              ],
              "id": 9284,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "713:131:34",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_memory_ptr_$7_memory_ptr",
                "typeString": "string memory[7] memory"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9287,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "864:15:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "848:31:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9286,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "848:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9291,
            "mutability": "mutable",
            "name": "_minted",
            "nameLocation": "915:7:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "883:39:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 9290,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9288,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "891:6:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "883:23:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9289,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "901:4:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 9297,
            "mutability": "mutable",
            "name": "_userMinted",
            "nameLocation": "978:11:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "926:63:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(string => bool))"
            },
            "typeName": {
              "id": 9296,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9292,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "934:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "926:43:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(string => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 9295,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 9293,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "953:6:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "nodeType": "Mapping",
                "src": "945:23:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                  "typeString": "mapping(string => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 9294,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "963:4:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ee99205c",
            "id": 9299,
            "mutability": "mutable",
            "name": "stakingContract",
            "nameLocation": "1009:15:34",
            "nodeType": "VariableDeclaration",
            "scope": 9528,
            "src": "994:30:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9298,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "994:7:34",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9370,
              "nodeType": "Block",
              "src": "1095:345:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9309,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1112:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9310,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9301,
                        "src": "1132:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9308,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1101:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 9311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:44:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9312,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:44:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9314,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9268,
                        "src": "1162:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9315,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9301,
                        "src": "1175:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9313,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 257,
                      "src": "1151:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (bytes32,address) returns (bool)"
                      }
                    },
                    "id": 9316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:37:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9317,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:37:34"
                },
                {
                  "body": {
                    "id": 9347,
                    "nodeType": "Block",
                    "src": "1241:106:34",
                    "statements": [
                      {
                        "assignments": [
                          9330
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9330,
                            "mutability": "mutable",
                            "name": "fullURI",
                            "nameLocation": "1263:7:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 9347,
                            "src": "1249:21:34",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 9329,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1249:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9340,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 9334,
                              "name": "baseCID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9274,
                              "src": "1287:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "hexValue": "2f",
                              "id": 9335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1296:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                                "typeString": "literal_string \"/\""
                              },
                              "value": "/"
                            },
                            {
                              "baseExpression": {
                                "id": 9336,
                                "name": "nftFiles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9285,
                                "src": "1301:8:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 9338,
                              "indexExpression": {
                                "id": 9337,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9319,
                                "src": "1310:1:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1301:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                                "typeString": "literal_string \"/\""
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "id": 9332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1273:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 9331,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1273:6:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1280:6:34",
                            "memberName": "concat",
                            "nodeType": "MemberAccess",
                            "src": "1273:13:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                              "typeString": "function () pure returns (string memory)"
                            }
                          },
                          "id": 9339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:40:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1249:64:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9344,
                              "name": "fullURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9330,
                              "src": "1332:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 9341,
                              "name": "_NFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9271,
                              "src": "1321:5:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
                            "id": 9343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1327:4:34",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1321:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
                          "id": 9345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1321:19:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9346,
                        "nodeType": "ExpressionStatement",
                        "src": "1321:19:34"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9322,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9319,
                      "src": "1215:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9323,
                        "name": "nftFiles",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9285,
                        "src": "1219:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 9324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1228:6:34",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1219:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1215:19:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9348,
                  "initializationExpression": {
                    "assignments": [
                      9319
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9319,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1208:1:34",
                        "nodeType": "VariableDeclaration",
                        "scope": 9348,
                        "src": "1200:9:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9318,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1200:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9321,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1212:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1200:13:34"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1236:3:34",
                      "subExpression": {
                        "id": 9326,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9319,
                        "src": "1236:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9328,
                    "nodeType": "ExpressionStatement",
                    "src": "1236:3:34"
                  },
                  "nodeType": "ForStatement",
                  "src": "1195:152:34"
                },
                {
                  "body": {
                    "id": 9368,
                    "nodeType": "Block",
                    "src": "1396:40:34",
                    "statements": [
                      {
                        "expression": {
                          "id": 9366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9360,
                              "name": "_minted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9291,
                              "src": "1404:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                "typeString": "mapping(string memory => bool)"
                              }
                            },
                            "id": 9364,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 9361,
                                "name": "_NFTs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9271,
                                "src": "1412:5:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                  "typeString": "string storage ref[] storage ref"
                                }
                              },
                              "id": 9363,
                              "indexExpression": {
                                "id": 9362,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9350,
                                "src": "1418:1:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1412:8:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1404:17:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 9365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1424:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1404:25:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9367,
                        "nodeType": "ExpressionStatement",
                        "src": "1404:25:34"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9353,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9350,
                      "src": "1373:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9354,
                        "name": "_NFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9271,
                        "src": "1377:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 9355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1383:6:34",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1377:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1373:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9369,
                  "initializationExpression": {
                    "assignments": [
                      9350
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9350,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1366:1:34",
                        "nodeType": "VariableDeclaration",
                        "scope": 9369,
                        "src": "1358:9:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9349,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9352,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1370:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1358:13:34"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1391:3:34",
                      "subExpression": {
                        "id": 9357,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9350,
                        "src": "1391:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9359,
                    "nodeType": "ExpressionStatement",
                    "src": "1391:3:34"
                  },
                  "nodeType": "ForStatement",
                  "src": "1353:83:34"
                }
              ]
            },
            "id": 9371,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4469616d6f6e64",
                    "id": 9304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1070:9:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aadb29765cb3e4f21bde5ecd65db8e565d901b6c9394dcec22aa81b8ff2d6e2f",
                      "typeString": "literal_string \"Diamond\""
                    },
                    "value": "Diamond"
                  },
                  {
                    "hexValue": "4469616d6f6e644e4654",
                    "id": 9305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1081:12:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f1bb1ac7db010e3e395aa6403e5e10c16c87c99871ddc2fdf93f6da2c655976e",
                      "typeString": "literal_string \"DiamondNFT\""
                    },
                    "value": "DiamondNFT"
                  }
                ],
                "id": 9306,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9303,
                  "name": "ERC721",
                  "nameLocations": [
                    "1063:6:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2339,
                  "src": "1063:6:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "1063:31:34"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9301,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1049:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9371,
                  "src": "1041:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1040:22:34"
            },
            "returnParameters": {
              "id": 9307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1095:0:34"
            },
            "scope": 9528,
            "src": "1029:411:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9443,
              "nodeType": "Block",
              "src": "1527:667:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 9382,
                            "name": "_NFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9271,
                            "src": "1541:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 9383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1547:6:34",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1541:12:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1556:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1541:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f204e46547320696e697469616c697a6564",
                        "id": 9386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1559:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_684902e5b732694bdf9a2f1b3405466106f503049572ed4e3e88a4e4ed3446f1",
                          "typeString": "literal_string \"No NFTs initialized\""
                        },
                        "value": "No NFTs initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_684902e5b732694bdf9a2f1b3405466106f503049572ed4e3e88a4e4ed3446f1",
                          "typeString": "literal_string \"No NFTs initialized\""
                        }
                      ],
                      "id": 9381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1533:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1533:48:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9388,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:48:34"
                },
                {
                  "body": {
                    "id": 9439,
                    "nodeType": "Block",
                    "src": "1631:543:34",
                    "statements": [
                      {
                        "assignments": [
                          9401
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9401,
                            "mutability": "mutable",
                            "name": "currentNFT",
                            "nameLocation": "1653:10:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 9439,
                            "src": "1639:24:34",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 9400,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1639:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9405,
                        "initialValue": {
                          "baseExpression": {
                            "id": 9402,
                            "name": "_NFTs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9271,
                            "src": "1666:5:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                              "typeString": "string storage ref[] storage ref"
                            }
                          },
                          "id": 9404,
                          "indexExpression": {
                            "id": 9403,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9390,
                            "src": "1672:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1666:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1639:35:34"
                      },
                      {
                        "condition": {
                          "id": 9411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1687:28:34",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 9406,
                                "name": "_userMinted",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9297,
                                "src": "1688:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(string memory => bool))"
                                }
                              },
                              "id": 9408,
                              "indexExpression": {
                                "id": 9407,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9373,
                                "src": "1700:2:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1688:15:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                "typeString": "mapping(string memory => bool)"
                              }
                            },
                            "id": 9410,
                            "indexExpression": {
                              "id": 9409,
                              "name": "currentNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9401,
                              "src": "1704:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1688:27:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 9438,
                        "nodeType": "IfStatement",
                        "src": "1683:236:34",
                        "trueBody": {
                          "id": 9437,
                          "nodeType": "Block",
                          "src": "1717:202:34",
                          "statements": [
                            {
                              "assignments": [
                                9413
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 9413,
                                  "mutability": "mutable",
                                  "name": "tokenId",
                                  "nameLocation": "1735:7:34",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 9437,
                                  "src": "1727:15:34",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 9412,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1727:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 9416,
                              "initialValue": {
                                "id": 9415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "1745:17:34",
                                "subExpression": {
                                  "id": 9414,
                                  "name": "_tokenIdCounter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9287,
                                  "src": "1745:15:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1727:35:34"
                            },
                            {
                              "expression": {
                                "id": 9423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 9417,
                                      "name": "_userMinted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9297,
                                      "src": "1772:11:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_bool_$_$",
                                        "typeString": "mapping(address => mapping(string memory => bool))"
                                      }
                                    },
                                    "id": 9420,
                                    "indexExpression": {
                                      "id": 9418,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9373,
                                      "src": "1784:2:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1772:15:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
                                      "typeString": "mapping(string memory => bool)"
                                    }
                                  },
                                  "id": 9421,
                                  "indexExpression": {
                                    "id": 9419,
                                    "name": "currentNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9401,
                                    "src": "1788:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1772:27:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 9422,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1802:4:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1772:34:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 9424,
                              "nodeType": "ExpressionStatement",
                              "src": "1772:34:34"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9426,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9373,
                                    "src": "1827:2:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 9427,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9413,
                                    "src": "1831:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 9425,
                                  "name": "_safeMint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    2017,
                                    2047
                                  ],
                                  "referencedDeclaration": 2017,
                                  "src": "1817:9:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 9428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1817:22:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 9429,
                              "nodeType": "ExpressionStatement",
                              "src": "1817:22:34"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 9431,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9413,
                                    "src": "1862:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 9432,
                                    "name": "currentNFT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9401,
                                    "src": "1871:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 9430,
                                  "name": "_setTokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2987,
                                  "src": "1849:12:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,string memory)"
                                  }
                                },
                                "id": 9433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1849:33:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 9434,
                              "nodeType": "ExpressionStatement",
                              "src": "1849:33:34"
                            },
                            {
                              "expression": {
                                "id": 9435,
                                "name": "currentNFT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9401,
                                "src": "1900:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "functionReturnParameters": 9380,
                              "id": 9436,
                              "nodeType": "Return",
                              "src": "1893:17:34"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9393,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9390,
                      "src": "1608:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 9394,
                        "name": "_NFTs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9271,
                        "src": "1612:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 9395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1618:6:34",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1612:12:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1608:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9440,
                  "initializationExpression": {
                    "assignments": [
                      9390
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9390,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1601:1:34",
                        "nodeType": "VariableDeclaration",
                        "scope": 9440,
                        "src": "1593:9:34",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1593:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9392,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1605:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1593:13:34"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1626:3:34",
                      "subExpression": {
                        "id": 9397,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9390,
                        "src": "1626:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9399,
                    "nodeType": "ExpressionStatement",
                    "src": "1626:3:34"
                  },
                  "nodeType": "ForStatement",
                  "src": "1588:586:34"
                },
                {
                  "expression": {
                    "hexValue": "",
                    "id": 9441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2187:2:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 9380,
                  "id": 9442,
                  "nodeType": "Return",
                  "src": "2180:9:34"
                }
              ]
            },
            "functionSelector": "40d097c3",
            "id": 9444,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9376,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9268,
                    "src": "1490:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 9377,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9375,
                  "name": "onlyRole",
                  "nameLocations": [
                    "1481:8:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "1481:8:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "1481:21:34"
              }
            ],
            "name": "safeMint",
            "nameLocation": "1453:8:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9373,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1470:2:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9444,
                  "src": "1462:10:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1461:12:34"
            },
            "returnParameters": {
              "id": 9380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9379,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9444,
                  "src": "1512:13:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9378,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1512:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1511:15:34"
            },
            "scope": 9528,
            "src": "1444:750:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9452,
              "nodeType": "Block",
              "src": "2264:23:34",
              "statements": [
                {
                  "expression": {
                    "id": 9450,
                    "name": "_NFTs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9271,
                    "src": "2277:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 9449,
                  "id": 9451,
                  "nodeType": "Return",
                  "src": "2270:12:34"
                }
              ]
            },
            "functionSelector": "32702c95",
            "id": 9453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableNFTs",
            "nameLocation": "2207:16:34",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2223:2:34"
            },
            "returnParameters": {
              "id": 9449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9453,
                  "src": "2247:15:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9446,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2247:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 9447,
                    "nodeType": "ArrayTypeName",
                    "src": "2247:8:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2246:17:34"
            },
            "scope": 9528,
            "src": "2198:89:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1952,
              2673
            ],
            "body": {
              "id": 9474,
              "nodeType": "Block",
              "src": "2495:50:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9469,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9455,
                        "src": "2522:2:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9470,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9457,
                        "src": "2526:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 9471,
                        "name": "auth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9459,
                        "src": "2535:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9467,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2508:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFT_$9528_$",
                          "typeString": "type(contract super NFT)"
                        }
                      },
                      "id": 9468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2514:7:34",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2673,
                      "src": "2508:13:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,uint256,address) returns (address)"
                      }
                    },
                    "id": 9472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:32:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9466,
                  "id": 9473,
                  "nodeType": "Return",
                  "src": "2501:39:34"
                }
              ]
            },
            "id": 9475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_update",
            "nameLocation": "2366:7:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9463,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9461,
                  "name": "ERC721",
                  "nameLocations": [
                    "2451:6:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2339,
                  "src": "2451:6:34"
                },
                {
                  "id": 9462,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "2459:16:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2860,
                  "src": "2459:16:34"
                }
              ],
              "src": "2442:34:34"
            },
            "parameters": {
              "id": 9460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9455,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2387:2:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9475,
                  "src": "2379:10:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9457,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2403:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9475,
                  "src": "2395:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2395:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9459,
                  "mutability": "mutable",
                  "name": "auth",
                  "nameLocation": "2424:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9475,
                  "src": "2416:12:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2373:59:34"
            },
            "returnParameters": {
              "id": 9466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9475,
                  "src": "2486:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:9:34"
            },
            "scope": 9528,
            "src": "2357:188:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1862,
              2859
            ],
            "body": {
              "id": 9492,
              "nodeType": "Block",
              "src": "2663:49:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9488,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9477,
                        "src": "2692:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9489,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9479,
                        "src": "2701:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 9485,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2669:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFT_$9528_$",
                          "typeString": "type(contract super NFT)"
                        }
                      },
                      "id": 9487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2675:16:34",
                      "memberName": "_increaseBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2859,
                      "src": "2669:22:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
                        "typeString": "function (address,uint128)"
                      }
                    },
                    "id": 9490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:38:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9491,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:38:34"
                }
              ]
            },
            "id": 9493,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_increaseBalance",
            "nameLocation": "2558:16:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9483,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9481,
                  "name": "ERC721",
                  "nameLocations": [
                    "2637:6:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2339,
                  "src": "2637:6:34"
                },
                {
                  "id": 9482,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "2645:16:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2860,
                  "src": "2645:16:34"
                }
              ],
              "src": "2628:34:34"
            },
            "parameters": {
              "id": 9480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9477,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2588:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9493,
                  "src": "2580:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2580:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9479,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2609:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9493,
                  "src": "2601:13:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 9478,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2574:44:34"
            },
            "returnParameters": {
              "id": 9484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2663:0:34"
            },
            "scope": 9528,
            "src": "2549:163:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1578,
              2968
            ],
            "body": {
              "id": 9508,
              "nodeType": "Block",
              "src": "2830:41:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9505,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9495,
                        "src": "2858:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 9503,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2843:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFT_$9528_$",
                          "typeString": "type(contract super NFT)"
                        }
                      },
                      "id": 9504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2849:8:34",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2968,
                      "src": "2843:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 9506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2843:23:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 9502,
                  "id": 9507,
                  "nodeType": "Return",
                  "src": "2836:30:34"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 9509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2725:8:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9499,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9497,
                  "name": "ERC721",
                  "nameLocations": [
                    "2780:6:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2339,
                  "src": "2780:6:34"
                },
                {
                  "id": 9498,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "2788:16:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2988,
                  "src": "2788:16:34"
                }
              ],
              "src": "2771:34:34"
            },
            "parameters": {
              "id": 9496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9495,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2747:7:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9509,
                  "src": "2739:15:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:25:34"
            },
            "returnParameters": {
              "id": 9502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9501,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9509,
                  "src": "2815:13:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9500,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2814:15:34"
            },
            "scope": 9528,
            "src": "2716:155:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              63,
              1483,
              2538,
              2911
            ],
            "body": {
              "id": 9526,
              "nodeType": "Block",
              "src": "3025:54:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9523,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9511,
                        "src": "3062:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 9521,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3038:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFT_$9528_$",
                          "typeString": "type(contract super NFT)"
                        }
                      },
                      "id": 9522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3044:17:34",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63,
                      "src": "3038:23:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 9524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:36:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9520,
                  "id": 9525,
                  "nodeType": "Return",
                  "src": "3031:43:34"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 9527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2884:17:34",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9517,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9513,
                  "name": "ERC721",
                  "nameLocations": [
                    "2951:6:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2339,
                  "src": "2951:6:34"
                },
                {
                  "id": 9514,
                  "name": "ERC721Enumerable",
                  "nameLocations": [
                    "2959:16:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2860,
                  "src": "2959:16:34"
                },
                {
                  "id": 9515,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "2977:16:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2988,
                  "src": "2977:16:34"
                },
                {
                  "id": 9516,
                  "name": "AccessControl",
                  "nameLocations": [
                    "2995:13:34"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 296,
                  "src": "2995:13:34"
                }
              ],
              "src": "2942:67:34"
            },
            "parameters": {
              "id": 9512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9511,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2914:11:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 9527,
                  "src": "2907:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 9510,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2901:28:34"
            },
            "returnParameters": {
              "id": 9520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9527,
                  "src": "3019:4:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3018:6:34"
            },
            "scope": 9528,
            "src": "2875:204:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9529,
        "src": "424:2657:34",
        "usedErrors": [
          306,
          309,
          484,
          489,
          498,
          503,
          508,
          515,
          520,
          525,
          2511,
          2514
        ],
        "usedEvents": [
          318,
          327,
          336,
          399,
          406,
          2355,
          2364,
          2373
        ]
      }
    ],
    "src": "32:3050:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {
    "17000": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256"
            }
          ],
          "name": "BatchMetadataUpdate",
          "type": "event"
        },
        "0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "MetadataUpdate",
          "type": "event"
        },
        "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        "0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x12E64BA43d2498E597dDcacbC9867F38Cd533757",
      "transactionHash": "0xce335601f4df6dafb3c75ff3812113fac44e7f9687ae072fa0797e973e54e239"
    },
    "31337": {
      "events": {},
      "links": {},
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "transactionHash": "0xad450f6094d887b7db00d55832aeca1b51ee242b3c96c3d0bb7ff4499829fab4"
    },
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xf920385F877C3d7CDC8726067f2A21DD9A0Da74d",
      "transactionHash": "0x0cf5d942170536b0fee986256d18c01b0a4a3d79dc2ba30087f279cf1c34de15"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-08-05T16:09:51.867Z",
  "networkType": "ethereum",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "ERC721EnumerableForbiddenBatchMint()": [
        {
          "details": "Batch mint is not allowed."
        }
      ],
      "ERC721IncorrectOwner(address,uint256,address)": [
        {
          "details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
          "params": {
            "owner": "Address of the current owner of a token.",
            "sender": "Address whose tokens are being transferred.",
            "tokenId": "Identifier number of a token."
          }
        }
      ],
      "ERC721InsufficientApproval(address,uint256)": [
        {
          "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
          "params": {
            "operator": "Address that may be allowed to operate on tokens without being their owner.",
            "tokenId": "Identifier number of a token."
          }
        }
      ],
      "ERC721InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC721InvalidOperator(address)": [
        {
          "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
          "params": {
            "operator": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC721InvalidOwner(address)": [
        {
          "details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
          "params": {
            "owner": "Address of the current owner of a token."
          }
        }
      ],
      "ERC721InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC721InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC721NonexistentToken(uint256)": [
        {
          "details": "Indicates a `tokenId` whose `owner` is the zero address.",
          "params": {
            "tokenId": "Identifier number of a token."
          }
        }
      ],
      "ERC721OutOfBoundsIndex(address,uint256)": [
        {
          "details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "BatchMetadataUpdate(uint256,uint256)": {
        "details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
      },
      "MetadataUpdate(uint256)": {
        "details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "name()": {
        "details": "Returns the token collection name."
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
      },
      "symbol()": {
        "details": "Returns the token collection symbol."
      },
      "tokenByIndex(uint256)": {
        "details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
      },
      "totalSupply()": {
        "details": "Returns the total amount of tokens stored by the contract."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}